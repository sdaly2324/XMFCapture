#include "MFAttrToStrHelper.h"

#include <map>
#include <mfapi.h>
#include <uuids.h>
#include <wmcodecdsp.h>
#include <wmcontainer.h>
#include <mftransform.h>
#include <initguid.h>
#include <encdec.h>
#include <wmsdkidl.h>
#include <ks.h>

// win 10
DEFINE_GUID(MFAudioFormat_LPCM, // == MEDIASUBTYPE_LPCM defined in ksmedia.h
	0xe06d8032L, 0xdb46, 0x11cf, 0xb4, 0xd1, 0x00, 0x80, 0x5f, 0x6c, 0xbb, 0xea);
DEFINE_GUID(MFAudioFormat_PCM_HDCP,
	0xa5e7ff01, 0x8411, 0x4acc, 0xa8, 0x65, 0x5f, 0x49, 0x41, 0x28, 0x8d, 0x80);
DEFINE_GUID(MFAudioFormat_Dolby_AC3_HDCP,
	0x97663a80, 0x8ffb, 0x4445, 0xa6, 0xba, 0x79, 0x2d, 0x90, 0x8f, 0x49, 0x7f);
DEFINE_GUID(MFAudioFormat_AAC_HDCP,
	0x419bce76, 0x8b72, 0x400f, 0xad, 0xeb, 0x84, 0xb5, 0x7d, 0x63, 0x48, 0x4d);
DEFINE_GUID(MFAudioFormat_ADTS_HDCP,
	0xda4963a3, 0x14d8, 0x4dcf, 0x92, 0xb7, 0x19, 0x3e, 0xb8, 0x43, 0x63, 0xdb);
DEFINE_GUID(MFAudioFormat_Base_HDCP,
	0x3884b5bc, 0xe277, 0x43fd, 0x98, 0x3d, 0x03, 0x8a, 0xa8, 0xd9, 0xb6, 0x05);
DEFINE_GUID(MFVideoFormat_H264_HDCP,
	0x5d0ce9dd, 0x9817, 0x49da, 0xbd, 0xfd, 0xf5, 0xf5, 0xb9, 0x8f, 0x18, 0xa6);
DEFINE_GUID(MFVideoFormat_HEVC_HDCP,
	0x3cfe0fe6, 0x05c4, 0x47dc, 0x9d, 0x70, 0x4b, 0xdb, 0x29, 0x59, 0x72, 0x0f);
DEFINE_GUID(MFVideoFormat_Base_HDCP,
	0xeac3b9d5, 0xbd14, 0x4237, 0x8f, 0x1f, 0xba, 0xb4, 0x28, 0xe4, 0x93, 0x12);

// Blackmagic
const GUID MEDIASUBTYPE_HDYC = { 0x43594448, 0x0000, 0x0010,{ 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71 } };

const std::map<const GUID, const std::wstring> GUID_TO_NAME =
{
	// Blackmagic
	{ MEDIASUBTYPE_HDYC, L"MEDIASUBTYPE_HDYC (Black Magic)" },

	// From mfapi.h
	{ MFVideoFormat_Base, L"MFVideoFormat_Base" },
	{ MFVideoFormat_RGB32, L"MFVideoFormat_RGB32" },
	{ MFVideoFormat_ARGB32, L"MFVideoFormat_ARGB32" },
	{ MFVideoFormat_RGB24, L"MFVideoFormat_RGB24" },
	{ MFVideoFormat_RGB555, L"MFVideoFormat_RGB555" },
	{ MFVideoFormat_RGB565, L"MFVideoFormat_RGB565" },
	{ MFVideoFormat_AI44, L"MFVideoFormat_AI44" },
	{ MFVideoFormat_AYUV, L"MFVideoFormat_AYUV" },
	{ MFVideoFormat_YUY2, L"MFVideoFormat_YUY2" },
	{ MFVideoFormat_YVYU, L"MFVideoFormat_YVYU" },
	{ MFVideoFormat_NV11, L"MFVideoFormat_NV11" },
	{ MFVideoFormat_NV12, L"MFVideoFormat_NV12" },
	{ MFVideoFormat_YV12, L"MFVideoFormat_YV12" },
	{ MFVideoFormat_I420, L"MFVideoFormat_I420" },
	{ MFVideoFormat_IYUV, L"MFVideoFormat_IYUV" },
	{ MFVideoFormat_Y210, L"MFVideoFormat_Y210" },
	{ MFVideoFormat_Y216, L"MFVideoFormat_Y216" },
	{ MFVideoFormat_Y410, L"MFVideoFormat_Y410" },
	{ MFVideoFormat_Y416, L"MFVideoFormat_Y416" },
	{ MFVideoFormat_Y41P, L"MFVideoFormat_Y41P" },
	{ MFVideoFormat_Y41T, L"MFVideoFormat_Y41T" },
	{ MFVideoFormat_Y42T, L"MFVideoFormat_Y42T" },
	{ MFVideoFormat_P210, L"MFVideoFormat_P210" },
	{ MFVideoFormat_P216, L"MFVideoFormat_P216" },
	{ MFVideoFormat_P010, L"MFVideoFormat_P010" },
	{ MFVideoFormat_P016, L"MFVideoFormat_P016" },
	{ MFVideoFormat_v210, L"MFVideoFormat_v210" },
	{ MFVideoFormat_v216, L"MFVideoFormat_v216" },
	{ MFVideoFormat_v410, L"MFVideoFormat_v410" },
	{ MFVideoFormat_MP43, L"MFVideoFormat_MP43" },
	{ MFVideoFormat_MP4S, L"MFVideoFormat_MP4S" },
	{ MFVideoFormat_M4S2, L"MFVideoFormat_M4S2" },
	{ MFVideoFormat_MP4V, L"MFVideoFormat_MP4V" },
	{ MFVideoFormat_WMV1, L"MFVideoFormat_WMV1" },
	{ MFVideoFormat_WMV2, L"MFVideoFormat_WMV2" },
	{ MFVideoFormat_WMV3, L"MFVideoFormat_WMV3" },
	{ MFVideoFormat_WVC1, L"MFVideoFormat_WVC1" },
	{ MFVideoFormat_MSS1, L"MFVideoFormat_MSS1" },
	{ MFVideoFormat_MSS2, L"MFVideoFormat_MSS2" },
	{ MFVideoFormat_MPG1, L"MFVideoFormat_MPG1" },
	{ MFVideoFormat_DVSL, L"MFVideoFormat_DVSL" },
	{ MFVideoFormat_DVSD, L"MFVideoFormat_DVSD" },
	{ MFVideoFormat_DV25, L"MFVideoFormat_DV25" },
	{ MFVideoFormat_DV50, L"MFVideoFormat_DV50" },
	{ MFVideoFormat_DVH1, L"MFVideoFormat_DVH1" },
	{ MFVideoFormat_DVC, L"MFVideoFormat_DVC" },
	{ MFVideoFormat_H264, L"MFVideoFormat_H264" },
	{ MFVideoFormat_MJPG, L"MFVideoFormat_MJPG" },
	{ MFVideoFormat_420O, L"MFVideoFormat_420O" },
	{ MFVideoFormat_HEVC, L"MFVideoFormat_HEVC" },
	{ MFVideoFormat_HEVC_ES, L"MFVideoFormat_HEVC_ES" },
	{ MFVideoFormat_H263, L"MFVideoFormat_H263" },
	{ MFVideoFormat_H264_ES, L"MFVideoFormat_H264_ES" },
	{ MFVideoFormat_MPEG2, L"MFVideoFormat_MPEG2" },
	{ MFAudioFormat_Base, L"MFAudioFormat_Base" },
	{ MFAudioFormat_PCM, L"MFAudioFormat_PCM" },
	{ MFAudioFormat_Float, L"MFAudioFormat_Float" },
	{ MFAudioFormat_DTS, L"MFAudioFormat_DTS" },
	{ MFAudioFormat_Dolby_AC3_SPDIF, L"MFAudioFormat_Dolby_AC3_SPDIF" },
	{ MFAudioFormat_DRM, L"MFAudioFormat_DRM" },
	{ MFAudioFormat_WMAudioV8, L"MFAudioFormat_WMAudioV8" },
	{ MFAudioFormat_WMAudioV9, L"MFAudioFormat_WMAudioV9" },
	{ MFAudioFormat_WMAudio_Lossless, L"MFAudioFormat_WMAudio_Lossless" },
	{ MFAudioFormat_WMASPDIF, L"MFAudioFormat_WMASPDIF" },
	{ MFAudioFormat_MSP1, L"MFAudioFormat_MSP1" },
	{ MFAudioFormat_MP3, L"MFAudioFormat_MP3" },
	{ MFAudioFormat_MPEG, L"MFAudioFormat_MPEG" },
	{ MFAudioFormat_AAC, L"MFAudioFormat_AAC" },
	{ MFAudioFormat_ADTS, L"MFAudioFormat_ADTS" },
	{ MFAudioFormat_AMR_NB, L"MFAudioFormat_AMR_NB" },
	{ MFAudioFormat_AMR_WB, L"MFAudioFormat_AMR_WB" },
	{ MFAudioFormat_AMR_WP, L"MFAudioFormat_AMR_WP" },
	{ MFAudioFormat_Dolby_AC3, L"MFAudioFormat_Dolby_AC3" },
	{ MFAudioFormat_Dolby_DDPlus, L"MFAudioFormat_Dolby_DDPlus" },
	{ MFMPEG4Format_Base, L"MFMPEG4Format_Base" },
	{ MF_MT_MAJOR_TYPE, L"MF_MT_MAJOR_TYPE" },
	{ MF_MT_SUBTYPE, L"MF_MT_SUBTYPE" },
	{ MF_MT_ALL_SAMPLES_INDEPENDENT, L"MF_MT_ALL_SAMPLES_INDEPENDENT" },
	{ MF_MT_FIXED_SIZE_SAMPLES, L"MF_MT_FIXED_SIZE_SAMPLES" },
	{ MF_MT_COMPRESSED, L"MF_MT_COMPRESSED" },
	{ MF_MT_SAMPLE_SIZE, L"MF_MT_SAMPLE_SIZE" },
	{ MF_MT_WRAPPED_TYPE, L"MF_MT_WRAPPED_TYPE" },
	{ MF_MT_AUDIO_NUM_CHANNELS, L"MF_MT_AUDIO_NUM_CHANNELS" },
	{ MF_MT_AUDIO_SAMPLES_PER_SECOND, L"MF_MT_AUDIO_SAMPLES_PER_SECOND" },
	{ MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND, L"MF_MT_AUDIO_FLOAT_SAMPLES_PER_SECOND" },
	{ MF_MT_AUDIO_AVG_BYTES_PER_SECOND, L"MF_MT_AUDIO_AVG_BYTES_PER_SECOND" },
	{ MF_MT_AUDIO_BLOCK_ALIGNMENT, L"MF_MT_AUDIO_BLOCK_ALIGNMENT" },
	{ MF_MT_AUDIO_BITS_PER_SAMPLE, L"MF_MT_AUDIO_BITS_PER_SAMPLE" },
	{ MF_MT_AUDIO_VALID_BITS_PER_SAMPLE, L"MF_MT_AUDIO_VALID_BITS_PER_SAMPLE" },
	{ MF_MT_AUDIO_SAMPLES_PER_BLOCK, L"MF_MT_AUDIO_SAMPLES_PER_BLOCK" },
	{ MF_MT_AUDIO_CHANNEL_MASK, L"MF_MT_AUDIO_CHANNEL_MASK" },
	{ MF_MT_AUDIO_FOLDDOWN_MATRIX, L"MF_MT_AUDIO_FOLDDOWN_MATRIX" },
	{ MF_MT_AUDIO_WMADRC_PEAKREF, L"MF_MT_AUDIO_WMADRC_PEAKREF" },
	{ MF_MT_AUDIO_WMADRC_PEAKTARGET, L"MF_MT_AUDIO_WMADRC_PEAKTARGET" },
	{ MF_MT_AUDIO_WMADRC_AVGREF, L"MF_MT_AUDIO_WMADRC_AVGREF" },
	{ MF_MT_AUDIO_WMADRC_AVGTARGET, L"MF_MT_AUDIO_WMADRC_AVGTARGET" },
	{ MF_MT_AUDIO_PREFER_WAVEFORMATEX, L"MF_MT_AUDIO_PREFER_WAVEFORMATEX" },
	{ MF_MT_AAC_PAYLOAD_TYPE, L"MF_MT_AAC_PAYLOAD_TYPE" },
	{ MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION, L"MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION" },
	{ MF_MT_FRAME_SIZE, L"MF_MT_FRAME_SIZE" },
	{ MF_MT_FRAME_RATE, L"MF_MT_FRAME_RATE" },
	{ MF_MT_PIXEL_ASPECT_RATIO, L"MF_MT_PIXEL_ASPECT_RATIO" },
	{ MF_MT_DRM_FLAGS, L"MF_MT_DRM_FLAGS" },
	{ MF_MT_PAD_CONTROL_FLAGS, L"MF_MT_PAD_CONTROL_FLAGS" },
	{ MF_MT_SOURCE_CONTENT_HINT, L"MF_MT_SOURCE_CONTENT_HINT" },
	{ MF_MT_VIDEO_CHROMA_SITING, L"MF_MT_VIDEO_CHROMA_SITING" },
	{ MF_MT_INTERLACE_MODE, L"MF_MT_INTERLACE_MODE" },
	{ MF_MT_TRANSFER_FUNCTION, L"MF_MT_TRANSFER_FUNCTION" },
	{ MF_MT_VIDEO_PRIMARIES, L"MF_MT_VIDEO_PRIMARIES" },
	{ MF_MT_CUSTOM_VIDEO_PRIMARIES, L"MF_MT_CUSTOM_VIDEO_PRIMARIES" },
	{ MF_MT_YUV_MATRIX, L"MF_MT_YUV_MATRIX" },
	{ MF_MT_VIDEO_LIGHTING, L"MF_MT_VIDEO_LIGHTING" },
	{ MF_MT_VIDEO_NOMINAL_RANGE, L"MF_MT_VIDEO_NOMINAL_RANGE" },
	{ MF_MT_GEOMETRIC_APERTURE, L"MF_MT_GEOMETRIC_APERTURE" },
	{ MF_MT_MINIMUM_DISPLAY_APERTURE, L"MF_MT_MINIMUM_DISPLAY_APERTURE" },
	{ MF_MT_PAN_SCAN_APERTURE, L"MF_MT_PAN_SCAN_APERTURE" },
	{ MF_MT_PAN_SCAN_ENABLED, L"MF_MT_PAN_SCAN_ENABLED" },
	{ MF_MT_AVG_BITRATE, L"MF_MT_AVG_BITRATE" },
	{ MF_MT_AVG_BIT_ERROR_RATE, L"MF_MT_AVG_BIT_ERROR_RATE" },
	{ MF_MT_MAX_KEYFRAME_SPACING, L"MF_MT_MAX_KEYFRAME_SPACING" },
	{ MF_MT_DEFAULT_STRIDE, L"MF_MT_DEFAULT_STRIDE" },
	{ MF_MT_PALETTE, L"MF_MT_PALETTE" },
	{ MF_MT_USER_DATA, L"MF_MT_USER_DATA" },
	{ MF_MT_AM_FORMAT_TYPE, L"MF_MT_AM_FORMAT_TYPE" },
	{ MF_MT_MPEG_START_TIME_CODE, L"MF_MT_MPEG_START_TIME_CODE" },
	{ MF_MT_MPEG2_PROFILE, L"MF_MT_MPEG2_PROFILE" },
	{ MF_MT_MPEG2_LEVEL, L"MF_MT_MPEG2_LEVEL" },
	{ MF_MT_MPEG2_FLAGS, L"MF_MT_MPEG2_FLAGS" },
	{ MF_MT_MPEG_SEQUENCE_HEADER, L"MF_MT_MPEG_SEQUENCE_HEADER" },
	{ MF_MT_MPEG2_STANDARD, L"MF_MT_MPEG2_STANDARD" },
	{ MF_MT_MPEG2_TIMECODE, L"MF_MT_MPEG2_TIMECODE" },
	{ MF_MT_MPEG2_CONTENT_PACKET, L"MF_MT_MPEG2_CONTENT_PACKET" },
	{ MF_MT_H264_MAX_CODEC_CONFIG_DELAY, L"MF_MT_H264_MAX_CODEC_CONFIG_DELAY" },
	{ MF_MT_H264_SUPPORTED_SLICE_MODES, L"MF_MT_H264_SUPPORTED_SLICE_MODES" },
	{ MF_MT_H264_SUPPORTED_SYNC_FRAME_TYPES, L"MF_MT_H264_SUPPORTED_SYNC_FRAME_TYPES" },
	{ MF_MT_H264_RESOLUTION_SCALING, L"MF_MT_H264_RESOLUTION_SCALING" },
	{ MF_MT_H264_SIMULCAST_SUPPORT, L"MF_MT_H264_SIMULCAST_SUPPORT" },
	{ MF_MT_H264_SUPPORTED_RATE_CONTROL_MODES, L"MF_MT_H264_SUPPORTED_RATE_CONTROL_MODES" },
	{ MF_MT_H264_MAX_MB_PER_SEC, L"MF_MT_H264_MAX_MB_PER_SEC" },
	{ MF_MT_H264_SUPPORTED_USAGES, L"MF_MT_H264_SUPPORTED_USAGES" },
	{ MF_MT_H264_CAPABILITIES, L"MF_MT_H264_CAPABILITIES" },
	{ MF_MT_H264_SVC_CAPABILITIES, L"MF_MT_H264_SVC_CAPABILITIES" },
	{ MF_MT_H264_USAGE, L"MF_MT_H264_USAGE" },
	{ MF_MT_H264_RATE_CONTROL_MODES, L"MF_MT_H264_RATE_CONTROL_MODES" },
	{ MF_MT_H264_LAYOUT_PER_STREAM, L"MF_MT_H264_LAYOUT_PER_STREAM" },
	{ MF_MT_DV_AAUX_SRC_PACK_0, L"MF_MT_DV_AAUX_SRC_PACK_0" },
	{ MF_MT_DV_AAUX_CTRL_PACK_0, L"MF_MT_DV_AAUX_CTRL_PACK_0" },
	{ MF_MT_DV_AAUX_SRC_PACK_1, L"MF_MT_DV_AAUX_SRC_PACK_1" },
	{ MF_MT_DV_AAUX_CTRL_PACK_1, L"MF_MT_DV_AAUX_CTRL_PACK_1" },
	{ MF_MT_DV_VAUX_SRC_PACK, L"MF_MT_DV_VAUX_SRC_PACK" },
	{ MF_MT_DV_VAUX_CTRL_PACK, L"MF_MT_DV_VAUX_CTRL_PACK" },
	{ MF_MT_ARBITRARY_HEADER, L"MF_MT_ARBITRARY_HEADER" },
	{ MF_MT_ARBITRARY_FORMAT, L"MF_MT_ARBITRARY_FORMAT" },
	{ MF_MT_IMAGE_LOSS_TOLERANT, L"MF_MT_IMAGE_LOSS_TOLERANT" },
	{ MF_MT_MPEG4_SAMPLE_DESCRIPTION, L"MF_MT_MPEG4_SAMPLE_DESCRIPTION" },
	{ MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY, L"MF_MT_MPEG4_CURRENT_SAMPLE_ENTRY" },
	{ MF_MT_ORIGINAL_4CC, L"MF_MT_ORIGINAL_4CC" },
	{ MF_MT_ORIGINAL_WAVE_FORMAT_TAG, L"MF_MT_ORIGINAL_WAVE_FORMAT_TAG" },
	{ MF_MT_FRAME_RATE_RANGE_MIN, L"MF_MT_FRAME_RATE_RANGE_MIN" },
	{ MF_MT_FRAME_RATE_RANGE_MAX, L"MF_MT_FRAME_RATE_RANGE_MAX" },
	{ MF_LOW_LATENCY, L"MF_LOW_LATENCY" },
	{ MF_VIDEO_MAX_MB_PER_SEC, L"MF_VIDEO_MAX_MB_PER_SEC" },
	{ MF_MT_DV_VAUX_CTRL_PACK, L"MF_MT_DV_VAUX_CTRL_PACK" },
	{ MFMediaType_Default, L"MFMediaType_Default" },
	{ MFMediaType_Audio, L"MFMediaType_Audio" },
	{ MFMediaType_Video, L"MFMediaType_Video" },
	{ MFMediaType_Protected, L"MFMediaType_Protected" },
	{ MFMediaType_SAMI, L"MFMediaType_SAMI" },
	{ MFMediaType_Script, L"MFMediaType_Script" },
	{ MFMediaType_Image, L"MFMediaType_Image" },
	{ MFMediaType_HTML, L"MFMediaType_HTML" },
	{ MFMediaType_Binary, L"MFMediaType_Binary" },
	{ MFMediaType_FileTransfer, L"MFMediaType_FileTransfer" },
	{ AM_MEDIA_TYPE_REPRESENTATION, L"AM_MEDIA_TYPE_REPRESENTATION" },
	{ FORMAT_MFVideoFormat, L"FORMAT_MFVideoFormat" },
	{ MFSampleExtension_Interlaced, L"MFSampleExtension_Interlaced" },
	{ MFSampleExtension_BottomFieldFirst, L"MFSampleExtension_BottomFieldFirst" },
	{ MFSampleExtension_RepeatFirstField, L"MFSampleExtension_RepeatFirstField" },
	{ MFSampleExtension_SingleField, L"MFSampleExtension_SingleField" },
	{ MFSampleExtension_DerivedFromTopField, L"MFSampleExtension_DerivedFromTopField" },
	{ MFSampleExtension_MeanAbsoluteDifference, L"MFSampleExtension_MeanAbsoluteDifference" },
	{ MFSampleExtension_LongTermReferenceFrameInfo, L"MFSampleExtension_LongTermReferenceFrameInfo" },
	{ MFSampleExtension_ROIRectangle, L"MFSampleExtension_ROIRectangle" },
	{ MFSampleExtension_PhotoThumbnail, L"MFSampleExtension_PhotoThumbnail" },
	{ MFSampleExtension_CaptureMetadata, L"MFSampleExtension_CaptureMetadata" },
	{ MF_CAPTURE_METADATA_PHOTO_FRAME_FLASH, L"XXMF_CAPTURE_METADATA_PHOTO_FRAME_FLASHX" },
	{ MFT_CATEGORY_VIDEO_DECODER, L"MFT_CATEGORY_VIDEO_DECODER" },
	{ MFT_CATEGORY_VIDEO_ENCODER, L"MFT_CATEGORY_VIDEO_ENCODER" },
	{ MFT_CATEGORY_VIDEO_EFFECT, L"MFT_CATEGORY_VIDEO_EFFECT" },
	{ MFT_CATEGORY_MULTIPLEXER, L"MFT_CATEGORY_MULTIPLEXER" },
	{ MFT_CATEGORY_DEMULTIPLEXER, L"MFT_CATEGORY_DEMULTIPLEXER" },
	{ MFT_CATEGORY_AUDIO_DECODER, L"MFT_CATEGORY_AUDIO_DECODER" },
	{ MFT_CATEGORY_AUDIO_ENCODER, L"MFT_CATEGORY_AUDIO_ENCODER" },
	{ MFT_CATEGORY_AUDIO_EFFECT, L"MFT_CATEGORY_AUDIO_EFFECT" },
	{ MFT_CATEGORY_VIDEO_PROCESSOR, L"MFT_CATEGORY_VIDEO_PROCESSOR" },
	{ MFT_CATEGORY_OTHER, L"MFT_CATEGORY_OTHER" },
	{ MF_MT_VIDEO_3D_FORMAT, L"MF_MT_VIDEO_3D_FORMAT" },
	{ MF_MT_VIDEO_3D_NUM_VIEWS, L"MF_MT_VIDEO_3D_NUM_VIEWS" },
	{ MF_MT_VIDEO_3D_LEFT_IS_BASE, L"MF_MT_VIDEO_3D_LEFT_IS_BASE" },
	{ MF_MT_VIDEO_3D_FIRST_IS_LEFT, L"MF_MT_VIDEO_3D_FIRST_IS_LEFT" },
	{ MFSampleExtension_3DVideo, L"MFSampleExtension_3DVideo" },
	{ MFSampleExtension_3DVideo_SampleFormat, L"MFSampleExtension_3DVideo_SampleFormat" },
	{ MF_MT_VIDEO_ROTATION, L"MF_MT_VIDEO_ROTATION" },
	{ MFSampleExtension_CleanPoint, L"MFSampleExtension_CleanPoint" },
	{ MFSampleExtension_Discontinuity, L"MFSampleExtension_Discontinuity" },
	{ MFSampleExtension_Token, L"MFSampleExtension_Token" },
	{ MFSampleExtension_DecodeTimestamp, L"MFSampleExtension_DecodeTimestamp" },
	{ MFSampleExtension_VideoEncodeQP, L"MFSampleExtension_VideoEncodeQP" },
	{ MFSampleExtension_VideoEncodePictureType, L"MFSampleExtension_VideoEncodePictureType" },
	{ MFSampleExtension_FrameCorruption, L"MFSampleExtension_FrameCorruption" },
	{ MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE, L"MFT_SUPPORT_DYNAMIC_FORMAT_CHANGE" },
	{ MFAudioFormat_LPCM, L"MFAudioFormat_LPCM" },
	{ MFAudioFormat_PCM_HDCP, L"MFAudioFormat_PCM_HDCP" },
	{ MFAudioFormat_Dolby_AC3_HDCP, L"MFAudioFormat_Dolby_AC3_HDCP" },
	{ MFAudioFormat_AAC_HDCP, L"MFAudioFormat_AAC_HDCP" },
	{ MFAudioFormat_ADTS_HDCP, L"MFAudioFormat_ADTS_HDCP" },
	{ MFAudioFormat_Base_HDCP, L"MFAudioFormat_Base_HDCP" },
	{ MFVideoFormat_H264_HDCP, L"MFVideoFormat_H264_HDCP" },
	{ MFVideoFormat_HEVC_HDCP, L"MFVideoFormat_HEVC_HDCP" },
	{ MFVideoFormat_Base_HDCP, L"MFVideoFormat_Base_HDCP" },

	// From uuids.h
	{ MEDIATYPE_NULL, L"MEDIATYPE_NULL" },
	{ MEDIASUBTYPE_NULL, L"MEDIASUBTYPE_NULL" },
	{ MEDIASUBTYPE_None, L"MEDIASUBTYPE_None" },
	{ MEDIATYPE_Video, L"MEDIATYPE_Video" },
	{ MEDIATYPE_Audio, L"MEDIATYPE_Audio" },
	{ MEDIATYPE_Text, L"MEDIATYPE_Text" },
	{ MEDIATYPE_Midi, L"MEDIATYPE_Midi" },
	{ MEDIATYPE_Stream, L"MEDIATYPE_Stream" },
	{ MEDIATYPE_Interleaved, L"MEDIATYPE_Interleaved" },
	{ MEDIATYPE_File, L"MEDIATYPE_File" },
	{ MEDIATYPE_ScriptCommand, L"MEDIATYPE_ScriptCommand" },
	{ MEDIATYPE_AUXLine21Data, L"MEDIATYPE_AUXLine21Data" },
	{ MEDIATYPE_AUXTeletextPage, L"MEDIATYPE_AUXTeletextPage" },
	{ MEDIATYPE_CC_CONTAINER, L"MEDIATYPE_CC_CONTAINER" },
	{ MEDIATYPE_DTVCCData, L"MEDIATYPE_DTVCCData" },
	{ MEDIATYPE_MSTVCaption, L"MEDIATYPE_MSTVCaption" },
	{ MEDIATYPE_VBI, L"MEDIATYPE_VBI" },
	{ MEDIASUBTYPE_DVB_SUBTITLES, L"MEDIASUBTYPE_DVB_SUBTITLES" },
	{ MEDIASUBTYPE_ISDB_CAPTIONS, L"MEDIASUBTYPE_ISDB_CAPTIONS" },
	{ MEDIASUBTYPE_ISDB_SUPERIMPOSE, L"MEDIASUBTYPE_ISDB_SUPERIMPOSE" },
	{ MEDIATYPE_Timecode, L"MEDIATYPE_Timecode" },
	{ MEDIATYPE_LMRT, L"MEDIATYPE_LMRT" },
	{ MEDIATYPE_URL_STREAM, L"MEDIATYPE_URL_STREAM" },
	{ MEDIASUBTYPE_CLPL, L"MEDIASUBTYPE_CLPL" },
	{ MEDIASUBTYPE_YUYV, L"MEDIASUBTYPE_YUYV" },
	{ MEDIASUBTYPE_IYUV, L"MEDIASUBTYPE_IYUV" },
	{ MEDIASUBTYPE_YVU9, L"MEDIASUBTYPE_YVU9" },
	{ MEDIASUBTYPE_Y411, L"MEDIASUBTYPE_Y411" },
	{ MEDIASUBTYPE_Y41P, L"MEDIASUBTYPE_Y41P" },
	{ MEDIASUBTYPE_YUY2, L"MEDIASUBTYPE_YUY2" },
	{ MEDIASUBTYPE_YVYU, L"MEDIASUBTYPE_YVYU" },
	{ MEDIASUBTYPE_UYVY, L"MEDIASUBTYPE_UYVY" },
	{ MEDIASUBTYPE_Y211, L"MEDIASUBTYPE_Y211" },
	{ MEDIASUBTYPE_CLJR, L"MEDIASUBTYPE_CLJR" },
	{ MEDIASUBTYPE_IF09, L"MEDIASUBTYPE_IF09" },
	{ MEDIASUBTYPE_CPLA, L"MEDIASUBTYPE_CPLA" },
	{ MEDIASUBTYPE_MJPG, L"MEDIASUBTYPE_MJPG" },
	{ MEDIASUBTYPE_TVMJ, L"MEDIASUBTYPE_TVMJ" },
	{ MEDIASUBTYPE_WAKE, L"MEDIASUBTYPE_WAKE" },
	{ MEDIASUBTYPE_CFCC, L"MEDIASUBTYPE_CFCC" },
	{ MEDIASUBTYPE_IJPG, L"MEDIASUBTYPE_IJPG" },
	{ MEDIASUBTYPE_Plum, L"MEDIASUBTYPE_Plum" },
	{ MEDIASUBTYPE_DVCS, L"MEDIASUBTYPE_DVCS" },
	{ MEDIASUBTYPE_H264, L"MEDIASUBTYPE_H264" },
	{ MEDIASUBTYPE_DVSD, L"MEDIASUBTYPE_DVSD" },
	{ MEDIASUBTYPE_MDVF, L"MEDIASUBTYPE_MDVF" },
	{ MEDIASUBTYPE_RGB1, L"MEDIASUBTYPE_RGB1" },
	{ MEDIASUBTYPE_RGB4, L"MEDIASUBTYPE_RGB4" },
	{ MEDIASUBTYPE_RGB8, L"MEDIASUBTYPE_RGB8" },
	{ MEDIASUBTYPE_RGB565, L"MEDIASUBTYPE_RGB565" },
	{ MEDIASUBTYPE_RGB555, L"MEDIASUBTYPE_RGB555" },
	{ MEDIASUBTYPE_RGB24, L"MEDIASUBTYPE_RGB24" },
	{ MEDIASUBTYPE_RGB32, L"MEDIASUBTYPE_RGB32" },
	{ MEDIASUBTYPE_ARGB1555, L"MEDIASUBTYPE_ARGB1555" },
	{ MEDIASUBTYPE_ARGB4444, L"MEDIASUBTYPE_ARGB4444" },
	{ MEDIASUBTYPE_ARGB32, L"MEDIASUBTYPE_ARGB32" },
	{ MEDIASUBTYPE_A2R10G10B10, L"MEDIASUBTYPE_A2R10G10B10" },
	{ MEDIASUBTYPE_A2B10G10R10, L"MEDIASUBTYPE_A2B10G10R10" },
	{ MEDIASUBTYPE_AYUV, L"MEDIASUBTYPE_AYUV" },
	{ MEDIASUBTYPE_AI44, L"MEDIASUBTYPE_AI44" },
	{ MEDIASUBTYPE_IA44, L"MEDIASUBTYPE_IA44" },
	{ MEDIASUBTYPE_RGB32_D3D_DX7_RT, L"MEDIASUBTYPE_RGB32_D3D_DX7_RT" },
	{ MEDIASUBTYPE_RGB16_D3D_DX7_RT, L"MEDIASUBTYPE_RGB16_D3D_DX7_RT" },
	{ MEDIASUBTYPE_ARGB32_D3D_DX7_RT, L"MEDIASUBTYPE_ARGB32_D3D_DX7_RT" },
	{ MEDIASUBTYPE_ARGB4444_D3D_DX7_RT, L"MEDIASUBTYPE_ARGB4444_D3D_DX7_RT" },
	{ MEDIASUBTYPE_ARGB1555_D3D_DX7_RT, L"MEDIASUBTYPE_ARGB1555_D3D_DX7_RT" },
	{ MEDIASUBTYPE_RGB32_D3D_DX9_RT, L"MEDIASUBTYPE_RGB32_D3D_DX9_RT" },
	{ MEDIASUBTYPE_RGB16_D3D_DX9_RT, L"MEDIASUBTYPE_RGB16_D3D_DX9_RT" },
	{ MEDIASUBTYPE_ARGB32_D3D_DX9_RT, L"MEDIASUBTYPE_ARGB32_D3D_DX9_RT" },
	{ MEDIASUBTYPE_ARGB4444_D3D_DX9_RT, L"MEDIASUBTYPE_ARGB4444_D3D_DX9_RT" },
	{ MEDIASUBTYPE_ARGB1555_D3D_DX9_RT, L"MEDIASUBTYPE_ARGB1555_D3D_DX9_RT" },
	{ MEDIASUBTYPE_YV12, L"MEDIASUBTYPE_YV12" },
	{ MEDIASUBTYPE_NV12, L"MEDIASUBTYPE_NV12" },
	{ MEDIASUBTYPE_NV11, L"MEDIASUBTYPE_NV11" },
	{ MEDIASUBTYPE_P208, L"MEDIASUBTYPE_P208" },
	{ MEDIASUBTYPE_P210, L"MEDIASUBTYPE_P210" },
	{ MEDIASUBTYPE_P216, L"MEDIASUBTYPE_P216" },
	{ MEDIASUBTYPE_P010, L"MEDIASUBTYPE_P010" },
	{ MEDIASUBTYPE_P016, L"MEDIASUBTYPE_P016" },
	{ MEDIASUBTYPE_Y210, L"MEDIASUBTYPE_Y210" },
	{ MEDIASUBTYPE_Y216, L"MEDIASUBTYPE_Y216" },
	{ MEDIASUBTYPE_P408, L"MEDIASUBTYPE_P408" },
	{ MEDIASUBTYPE_NV24, L"MEDIASUBTYPE_NV24" },
	{ MEDIASUBTYPE_IMC1, L"MEDIASUBTYPE_IMC1" },
	{ MEDIASUBTYPE_IMC2, L"MEDIASUBTYPE_IMC2" },
	{ MEDIASUBTYPE_IMC3, L"MEDIASUBTYPE_IMC3" },
	{ MEDIASUBTYPE_IMC4, L"MEDIASUBTYPE_IMC4" },
	{ MEDIASUBTYPE_S340, L"MEDIASUBTYPE_S340" },
	{ MEDIASUBTYPE_S342, L"MEDIASUBTYPE_S342" },
	{ MEDIASUBTYPE_Overlay, L"MEDIASUBTYPE_Overlay" },
	{ MEDIASUBTYPE_MPEG1Packet, L"MEDIASUBTYPE_MPEG1Packet" },
	{ MEDIASUBTYPE_MPEG1Payload, L"MEDIASUBTYPE_MPEG1Payload" },
	{ MEDIASUBTYPE_MPEG1AudioPayload, L"MEDIASUBTYPE_MPEG1AudioPayload" },
	{ MEDIATYPE_MPEG1SystemStream, L"MEDIATYPE_MPEG1SystemStream" },
	{ MEDIASUBTYPE_MPEG1System, L"MEDIASUBTYPE_MPEG1System" },
	{ MEDIASUBTYPE_MPEG1VideoCD, L"MEDIASUBTYPE_MPEG1VideoCD" },
	{ MEDIASUBTYPE_MPEG1Video, L"MEDIASUBTYPE_MPEG1Video" },
	{ MEDIASUBTYPE_MPEG1Audio, L"MEDIASUBTYPE_MPEG1Audio" },
	{ MEDIASUBTYPE_Avi, L"MEDIASUBTYPE_Avi" },
	{ MEDIASUBTYPE_Asf, L"MEDIASUBTYPE_Asf" },
	{ MEDIASUBTYPE_QTMovie, L"MEDIASUBTYPE_QTMovie" },
	{ MEDIASUBTYPE_QTRpza, L"MEDIASUBTYPE_QTRpza" },
	{ MEDIASUBTYPE_QTSmc, L"MEDIASUBTYPE_QTSmc" },
	{ MEDIASUBTYPE_QTRle, L"MEDIASUBTYPE_QTRle" },
	{ MEDIASUBTYPE_QTJpeg, L"MEDIASUBTYPE_QTJpeg" },
	{ MEDIASUBTYPE_PCMAudio_Obsolete, L"MEDIASUBTYPE_PCMAudio_Obsolete" },
	{ MEDIASUBTYPE_PCM, L"MEDIASUBTYPE_PCM" },
	{ MEDIASUBTYPE_WAVE, L"MEDIASUBTYPE_WAVE" },
	{ MEDIASUBTYPE_AU, L"MEDIASUBTYPE_AU" },
	{ MEDIASUBTYPE_AIFF, L"MEDIASUBTYPE_AIFF" },
	{ MEDIASUBTYPE_dvsd, L"MEDIASUBTYPE_dvsd" },
	{ MEDIASUBTYPE_dvhd, L"MEDIASUBTYPE_dvhd" },
	{ MEDIASUBTYPE_dvsl, L"MEDIASUBTYPE_dvsl" },
	{ MEDIASUBTYPE_dv25, L"MEDIASUBTYPE_dv25" },
	{ MEDIASUBTYPE_dv50, L"MEDIASUBTYPE_dv50" },
	{ MEDIASUBTYPE_dvh1, L"MEDIASUBTYPE_dvh1" },
	{ MEDIASUBTYPE_Line21_BytePair, L"MEDIASUBTYPE_Line21_BytePair" },
	{ MEDIASUBTYPE_Line21_GOPPacket, L"MEDIASUBTYPE_Line21_GOPPacket" },
	{ MEDIASUBTYPE_Line21_VBIRawData, L"MEDIASUBTYPE_Line21_VBIRawData" },
	{ MEDIASUBTYPE_708_608Data, L"MEDIASUBTYPE_708_608Data" },
	{ MEDIASUBTYPE_DtvCcData, L"MEDIASUBTYPE_DtvCcData" },
	{ MEDIASUBTYPE_CC_CONTAINER, L"MEDIASUBTYPE_CC_CONTAINER" },
	{ MEDIASUBTYPE_TELETEXT, L"MEDIASUBTYPE_TELETEXT" },
	{ MEDIASUBTYPE_VBI, L"MEDIASUBTYPE_VBI" },
	{ MEDIASUBTYPE_WSS, L"MEDIASUBTYPE_WSS" },
	{ MEDIASUBTYPE_XDS, L"MEDIASUBTYPE_XDS" },
	{ MEDIASUBTYPE_VPS, L"MEDIASUBTYPE_VPS" },
	{ MEDIASUBTYPE_DRM_Audio, L"MEDIASUBTYPE_DRM_Audio" },
	{ MEDIASUBTYPE_IEEE_FLOAT, L"MEDIASUBTYPE_IEEE_FLOAT" },
	{ MEDIASUBTYPE_DOLBY_AC3_SPDIF, L"MEDIASUBTYPE_DOLBY_AC3_SPDIF" },
	{ MEDIASUBTYPE_RAW_SPORT, L"MEDIASUBTYPE_RAW_SPORT" },
	{ MEDIASUBTYPE_SPDIF_TAG_241h, L"MEDIASUBTYPE_SPDIF_TAG_241h" },
	{ FORMAT_None, L"FORMAT_None" },
	{ FORMAT_VideoInfo, L"FORMAT_VideoInfo" },
	{ FORMAT_VideoInfo2, L"FORMAT_VideoInfo2" },
	{ FORMAT_WaveFormatEx, L"FORMAT_WaveFormatEx" },
	{ FORMAT_MPEGVideo, L"FORMAT_MPEGVideo" },
	{ FORMAT_MPEGStreams, L"FORMAT_MPEGStreams" },
	{ FORMAT_DvInfo, L"FORMAT_DvInfo" },
	{ FORMAT_525WSS, L"FORMAT_525WSS" },
	{ FORMAT_AnalogVideo, L"FORMAT_AnalogVideo" },
	{ MEDIATYPE_AnalogVideo, L"MEDIATYPE_AnalogVideo" },
	{ MEDIASUBTYPE_AnalogVideo_NTSC_M, L"MEDIASUBTYPE_AnalogVideo_NTSC_M" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_B, L"MEDIASUBTYPE_AnalogVideo_PAL_B" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_D, L"MEDIASUBTYPE_AnalogVideo_PAL_D" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_G, L"MEDIASUBTYPE_AnalogVideo_PAL_G" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_H, L"MEDIASUBTYPE_AnalogVideo_PAL_H" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_I, L"MEDIASUBTYPE_AnalogVideo_PAL_I" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_M, L"MEDIASUBTYPE_AnalogVideo_PAL_M" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_N, L"MEDIASUBTYPE_AnalogVideo_PAL_N" },
	{ MEDIASUBTYPE_AnalogVideo_PAL_N_COMBO, L"MEDIASUBTYPE_AnalogVideo_PAL_N_COMBO" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_B, L"MEDIASUBTYPE_AnalogVideo_SECAM_B" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_D, L"MEDIASUBTYPE_AnalogVideo_SECAM_D" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_G, L"MEDIASUBTYPE_AnalogVideo_SECAM_G" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_H, L"MEDIASUBTYPE_AnalogVideo_SECAM_H" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_K, L"MEDIASUBTYPE_AnalogVideo_SECAM_K" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_K1, L"MEDIASUBTYPE_AnalogVideo_SECAM_K1" },
	{ MEDIASUBTYPE_AnalogVideo_SECAM_L, L"MEDIASUBTYPE_AnalogVideo_SECAM_L" },
	{ MEDIATYPE_AnalogAudio, L"MEDIATYPE_AnalogAudio" },
	{ FORMAT_CAPTIONED_H264VIDEO, L"FORMAT_CAPTIONED_H264VIDEO" },
	{ FORMAT_CC_CONTAINER, L"FORMAT_CC_CONTAINER" },
	{ CAPTION_FORMAT_ATSC, L"CAPTION_FORMAT_ATSC" },
	{ CAPTION_FORMAT_DVB, L"CAPTION_FORMAT_DVB" },
	{ CAPTION_FORMAT_DIRECTV, L"CAPTION_FORMAT_DIRECTV" },
	{ CAPTION_FORMAT_ECHOSTAR, L"CAPTION_FORMAT_ECHOSTAR" },
	{ FORMAT_CAPTIONED_MPEG2VIDEO, L"FORMAT_CAPTIONED_MPEG2VIDEO" },
	{ MEDIASUBTYPE_DssVideo, L"MEDIASUBTYPE_DssVideo" },
	{ MEDIASUBTYPE_DssAudio, L"MEDIASUBTYPE_DssAudio" },
	{ MEDIASUBTYPE_VPVideo, L"MEDIASUBTYPE_VPVideo" },
	{ MEDIASUBTYPE_VPVBI, L"MEDIASUBTYPE_VPVBI" },
	{ CLSID_CaptureGraphBuilder, L"CLSID_CaptureGraphBuilder" },
	{ CLSID_CaptureGraphBuilder2, L"CLSID_CaptureGraphBuilder2" },
	{ CLSID_ProtoFilterGraph, L"CLSID_ProtoFilterGraph" },
	{ CLSID_SystemClock, L"CLSID_SystemClock" },
	{ CLSID_FilterMapper, L"CLSID_FilterMapper" },
	{ CLSID_FilterGraph, L"CLSID_FilterGraph" },
	{ CLSID_FilterGraphNoThread, L"CLSID_FilterGraphNoThread" },
	{ CLSID_FilterGraphPrivateThread, L"CLSID_FilterGraphPrivateThread" },
	{ CLSID_MPEG1Doc, L"CLSID_MPEG1Doc" },
	{ CLSID_FileSource, L"CLSID_FileSource" },
	{ CLSID_MPEG1PacketPlayer, L"CLSID_MPEG1PacketPlayer" },
	{ CLSID_MPEG1Splitter, L"CLSID_MPEG1Splitter" },
	{ CLSID_CMpegVideoCodec, L"CLSID_CMpegVideoCodec" },
	{ CLSID_CMpegAudioCodec, L"CLSID_CMpegAudioCodec" },
	{ CLSID_TextRender, L"CLSID_TextRender" },
	{ CLSID_InfTee, L"CLSID_InfTee" },
	{ CLSID_AviSplitter, L"CLSID_AviSplitter" },
	{ CLSID_AviReader, L"CLSID_AviReader" },
	{ CLSID_VfwCapture, L"CLSID_VfwCapture" },
	{ CLSID_FGControl, L"CLSID_FGControl" },
	{ CLSID_MOVReader, L"CLSID_MOVReader" },
	{ CLSID_QuickTimeParser, L"CLSID_QuickTimeParser" },
	{ CLSID_QTDec, L"CLSID_QTDec" },
	{ CLSID_AVIDoc, L"CLSID_AVIDoc" },
	{ CLSID_VideoRenderer, L"CLSID_VideoRenderer" },
	{ CLSID_Colour, L"CLSID_Colour" },
	{ CLSID_Dither, L"CLSID_Dither" },
	{ CLSID_ModexRenderer, L"CLSID_ModexRenderer" },
	{ CLSID_AudioRender, L"CLSID_AudioRender" },
	{ CLSID_AudioProperties, L"CLSID_AudioProperties" },
	{ CLSID_DSoundRender, L"CLSID_DSoundRender" },
	{ CLSID_AudioRecord, L"CLSID_AudioRecord" },
	{ CLSID_AudioInputMixerProperties, L"CLSID_AudioInputMixerProperties" },
	{ CLSID_AVIDec, L"CLSID_AVIDec" },
	{ CLSID_AVIDraw, L"CLSID_AVIDraw" },
	{ CLSID_ACMWrapper, L"CLSID_ACMWrapper" },
	{ CLSID_AsyncReader, L"CLSID_AsyncReader" },
	{ CLSID_URLReader, L"CLSID_URLReader" },
	{ CLSID_PersistMonikerPID, L"CLSID_PersistMonikerPID" },
	{ CLSID_AVICo, L"CLSID_AVICo" },
	{ CLSID_FileWriter, L"CLSID_FileWriter" },
	{ CLSID_AviDest, L"CLSID_AviDest" },
	{ CLSID_AviMuxProptyPage, L"CLSID_AviMuxProptyPage" },
	{ CLSID_AviMuxProptyPage1, L"CLSID_AviMuxProptyPage1" },
	{ CLSID_AVIMIDIRender, L"CLSID_AVIMIDIRender" },
	{ CLSID_WMAsfReader, L"CLSID_WMAsfReader" },
	{ CLSID_WMAsfWriter, L"CLSID_WMAsfWriter" },
	{ CLSID_MPEG2Demultiplexer, L"CLSID_MPEG2Demultiplexer" },
	{ CLSID_MPEG2Demultiplexer_NoClock, L"CLSID_MPEG2Demultiplexer_NoClock" },
	{ CLSID_StreamBufferSink, L"CLSID_StreamBufferSink" },
	{ CLSID_SBE2Sink, L"CLSID_SBE2Sink" },
	{ CLSID_StreamBufferSource, L"CLSID_StreamBufferSource" },
	{ CLSID_StreamBufferConfig, L"CLSID_StreamBufferConfig" },
	{ CLSID_StreamBufferPropertyHandler, L"CLSID_StreamBufferPropertyHandler" },
	{ CLSID_StreamBufferThumbnailHandler, L"CLSID_StreamBufferThumbnailHandler" },
	{ CLSID_Mpeg2VideoStreamAnalyzer, L"CLSID_Mpeg2VideoStreamAnalyzer" },
	{ CLSID_StreamBufferRecordingAttributes, L"CLSID_StreamBufferRecordingAttributes" },
	{ CLSID_StreamBufferComposeRecording, L"CLSID_StreamBufferComposeRecording" },
	{ CLSID_SBE2File, L"CLSID_SBE2File" },
	{ CLSID_DVVideoCodec, L"CLSID_DVVideoCodec" },
	{ CLSID_DVVideoEnc, L"CLSID_DVVideoEnc" },
	{ CLSID_DVSplitter, L"CLSID_DVSplitter" },
	{ CLSID_DVMux, L"CLSID_DVMux" },
	{ CLSID_SeekingPassThru, L"CLSID_SeekingPassThru" },
	{ CLSID_Line21Decoder, L"CLSID_Line21Decoder" },
	{ CLSID_Line21Decoder2, L"CLSID_Line21Decoder2" },
	{ CLSID_CCAFilter, L"CLSID_CCAFilter" },
	{ CLSID_OverlayMixer, L"CLSID_OverlayMixer" },
	{ CLSID_VBISurfaces, L"CLSID_VBISurfaces" },
	{ CLSID_WSTDecoder, L"CLSID_WSTDecoder" },
	{ CLSID_MjpegDec, L"CLSID_MjpegDec" },
	{ CLSID_MJPGEnc, L"CLSID_MJPGEnc" },
	{ CLSID_SystemDeviceEnum, L"CLSID_SystemDeviceEnum" },
	{ CLSID_CDeviceMoniker, L"CLSID_CDeviceMoniker" },
	{ CLSID_VideoInputDeviceCategory, L"CLSID_VideoInputDeviceCategory" },
	{ CLSID_CVidCapClassManager, L"CLSID_CVidCapClassManager" },
	{ CLSID_LegacyAmFilterCategory, L"CLSID_LegacyAmFilterCategory" },
	{ CLSID_CQzFilterClassManager, L"CLSID_CQzFilterClassManager" },
	{ CLSID_VideoCompressorCategory, L"CLSID_VideoCompressorCategory" },
	{ CLSID_CIcmCoClassManager, L"CLSID_CIcmCoClassManager" },
	{ CLSID_AudioCompressorCategory, L"CLSID_AudioCompressorCategory" },
	{ CLSID_CAcmCoClassManager, L"CLSID_CAcmCoClassManager" },
	{ CLSID_AudioInputDeviceCategory, L"CLSID_AudioInputDeviceCategory" },
	{ CLSID_CWaveinClassManager, L"CLSID_CWaveinClassManager" },
	{ CLSID_AudioRendererCategory, L"CLSID_AudioRendererCategory" },
	{ CLSID_CWaveOutClassManager, L"CLSID_CWaveOutClassManager" },
	{ CLSID_MidiRendererCategory, L"CLSID_MidiRendererCategory" },
	{ CLSID_CMidiOutClassManager, L"CLSID_CMidiOutClassManager" },
	{ CLSID_TransmitCategory, L"CLSID_TransmitCategory" },
	{ CLSID_DeviceControlCategory, L"CLSID_DeviceControlCategory" },
	{ CLSID_ActiveMovieCategories, L"CLSID_ActiveMovieCategories" },
	{ CLSID_DVDHWDecodersCategory, L"CLSID_DVDHWDecodersCategory" },
	{ CLSID_MediaEncoderCategory, L"CLSID_MediaEncoderCategory" },
	{ CLSID_MediaMultiplexerCategory, L"CLSID_MediaMultiplexerCategory" },
	{ CLSID_FilterMapper2, L"CLSID_FilterMapper2" },
	{ CLSID_MemoryAllocator, L"CLSID_MemoryAllocator" },
	{ CLSID_MediaPropertyBag, L"CLSID_MediaPropertyBag" },
	{ CLSID_DvdGraphBuilder, L"CLSID_DvdGraphBuilder" },
	{ CLSID_DVDNavigator, L"CLSID_DVDNavigator" },
	{ CLSID_DVDState, L"CLSID_DVDState" },
	{ CLSID_SmartTee, L"CLSID_SmartTee" },
	{ CLSID_DtvCcFilter, L"CLSID_DtvCcFilter" },
	{ CLSID_CaptionsFilter, L"CLSID_CaptionsFilter" },
	{ CLSID_SubtitlesFilter, L"CLSID_SubtitlesFilter" },
	{ CLSID_DirectShowPluginControl, L"CLSID_DirectShowPluginControl" },

	// From wmcodecdsp.h
	{ MEDIASUBTYPE_Y41T, L"MEDIASUBTYPE_Y41T" },
	{ MEDIASUBTYPE_Y42T, L"MEDIASUBTYPE_Y42T" },
	{ MEDIASUBTYPE_NV11, L"MEDIASUBTYPE_NV11" },
	{ MEDIASUBTYPE_V216, L"MEDIASUBTYPE_V216" },
	{ MEDIASUBTYPE_V410, L"MEDIASUBTYPE_V410" },
	{ MEDIASUBTYPE_v210, L"MEDIASUBTYPE_v210" },
	{ MEDIASUBTYPE_I420, L"MEDIASUBTYPE_I420" },
	{ MEDIASUBTYPE_WVC1, L"MEDIASUBTYPE_WVC1" },
	{ MEDIASUBTYPE_wvc1, L"MEDIASUBTYPE_wvc1" },
	{ MEDIASUBTYPE_WMVA, L"MEDIASUBTYPE_WMVA" },
	{ MEDIASUBTYPE_wmva, L"MEDIASUBTYPE_wmva" },
	{ MEDIASUBTYPE_WMVB, L"MEDIASUBTYPE_WMVB" },
	{ MEDIASUBTYPE_wmvb, L"MEDIASUBTYPE_wmvb" },
	{ MEDIASUBTYPE_WMVR, L"MEDIASUBTYPE_WMVR" },
	{ MEDIASUBTYPE_wmvr, L"MEDIASUBTYPE_wmvr" },
	{ MEDIASUBTYPE_WMVP, L"MEDIASUBTYPE_WMVP" },
	{ MEDIASUBTYPE_wmvp, L"MEDIASUBTYPE_wmvp" },
	{ MEDIASUBTYPE_WVP2, L"MEDIASUBTYPE_WVP2" },
	{ MEDIASUBTYPE_wvp2, L"MEDIASUBTYPE_wvp2" },
	{ MEDIASUBTYPE_WMV3, L"MEDIASUBTYPE_WMV3" },
	{ MEDIASUBTYPE_wmv3, L"MEDIASUBTYPE_wmv3" },
	{ MEDIASUBTYPE_WMV2, L"MEDIASUBTYPE_WMV2" },
	{ MEDIASUBTYPE_wmv2, L"MEDIASUBTYPE_wmv2" },
	{ MEDIASUBTYPE_WMV1, L"MEDIASUBTYPE_WMV1" },
	{ MEDIASUBTYPE_wmv1, L"MEDIASUBTYPE_wmv1" },
	{ MEDIASUBTYPE_MPG4, L"MEDIASUBTYPE_MPG4" },
	{ MEDIASUBTYPE_mpg4, L"MEDIASUBTYPE_mpg4" },
	{ MEDIASUBTYPE_MP42, L"MEDIASUBTYPE_MP42" },
	{ MEDIASUBTYPE_mp42, L"MEDIASUBTYPE_mp42" },
	{ MEDIASUBTYPE_MP43, L"MEDIASUBTYPE_MP43" },
	{ MEDIASUBTYPE_mp43, L"MEDIASUBTYPE_mp43" },
	{ MEDIASUBTYPE_MP4S, L"MEDIASUBTYPE_MP4S" },
	{ MEDIASUBTYPE_mp4s, L"MEDIASUBTYPE_mp4s" },
	{ MEDIASUBTYPE_M4S2, L"MEDIASUBTYPE_M4S2" },
	{ MEDIASUBTYPE_m4s2, L"MEDIASUBTYPE_m4s2" },
	{ MEDIASUBTYPE_MSS1, L"MEDIASUBTYPE_MSS1" },
	{ MEDIASUBTYPE_MSS2, L"MEDIASUBTYPE_MSS2" },
	{ MEDIASUBTYPE_MSAUDIO1, L"MEDIASUBTYPE_MSAUDIO1" },
	{ MEDIASUBTYPE_WMAUDIO2, L"MEDIASUBTYPE_WMAUDIO2" },
	{ MEDIASUBTYPE_WMAUDIO3, L"MEDIASUBTYPE_WMAUDIO3" },
	{ MEDIASUBTYPE_WMAUDIO_LOSSLESS, L"MEDIASUBTYPE_WMAUDIO_LOSSLESS" },
	{ MEDIASUBTYPE_WMASPDIF, L"MEDIASUBTYPE_WMASPDIF" },
	{ MEDIASUBTYPE_WMAUDIO4, L"MEDIASUBTYPE_WMAUDIO4" },
	{ MEDIASUBTYPE_MPEG_ADTS_AAC, L"MEDIASUBTYPE_MPEG_ADTS_AAC" },
	{ MEDIASUBTYPE_MPEG_RAW_AAC, L"MEDIASUBTYPE_MPEG_RAW_AAC" },
	{ MEDIASUBTYPE_MPEG_LOAS, L"MEDIASUBTYPE_MPEG_LOAS" },
	{ MEDIASUBTYPE_NOKIA_MPEG_ADTS_AAC, L"MEDIASUBTYPE_NOKIA_MPEG_ADTS_AAC" },
	{ MEDIASUBTYPE_NOKIA_MPEG_RAW_AAC, L"MEDIASUBTYPE_NOKIA_MPEG_RAW_AAC" },
	{ MEDIASUBTYPE_VODAFONE_MPEG_ADTS_AAC, L"MEDIASUBTYPE_VODAFONE_MPEG_ADTS_AAC" },
	{ MEDIASUBTYPE_VODAFONE_MPEG_RAW_AAC, L"MEDIASUBTYPE_VODAFONE_MPEG_RAW_AAC" },
	{ MEDIASUBTYPE_MPEG_HEAAC, L"MEDIASUBTYPE_MPEG_HEAAC" },
	{ MEDIASUBTYPE_RAW_AAC1, L"MEDIASUBTYPE_RAW_AAC1" },
	{ MEDIASUBTYPE_DVM, L"MEDIASUBTYPE_DVM" },
	{ MEDIASUBTYPE_DTS2, L"MEDIASUBTYPE_DTS2" },
	{ MEDIASUBTYPE_DOLBY_DDPLUS, L"MEDIASUBTYPE_DOLBY_DDPLUS" },
	{ MEDIASUBTYPE_DOLBY_TRUEHD, L"MEDIASUBTYPE_DOLBY_TRUEHD" },
	{ MEDIASUBTYPE_DTS_HD, L"MEDIASUBTYPE_DTS_HD" },
	{ MEDIASUBTYPE_h264, L"MEDIASUBTYPE_h264" },
	{ MEDIASUBTYPE_AVC1, L"MEDIASUBTYPE_AVC1" },
	{ MEDIASUBTYPE_X264, L"MEDIASUBTYPE_X264" },
	{ MEDIASUBTYPE_x264, L"MEDIASUBTYPE_x264" },
	{ CLSID_CMSH264EncoderMFT, L"CLSID_CMSH264EncoderMFT" },

	// From mfidl.h
	{ MF_PD_PMPHOST_CONTEXT, L"MF_PD_PMPHOST_CONTEXT" },
	{ MF_PD_APP_CONTEXT, L"MF_PD_APP_CONTEXT" },
	{ MF_PD_DURATION, L"MF_PD_DURATION" },
	{ MF_PD_TOTAL_FILE_SIZE, L"MF_PD_TOTAL_FILE_SIZE" },
	{ MF_PD_AUDIO_ENCODING_BITRATE, L"MF_PD_AUDIO_ENCODING_BITRATE" },
	{ MF_PD_VIDEO_ENCODING_BITRATE, L"MF_PD_VIDEO_ENCODING_BITRATE" },
	{ MF_PD_MIME_TYPE, L"MF_PD_MIME_TYPE" },
	{ MF_PD_LAST_MODIFIED_TIME, L"MF_PD_LAST_MODIFIED_TIME" },
	{ MF_PD_PLAYBACK_ELEMENT_ID, L"MF_PD_PLAYBACK_ELEMENT_ID" },
	{ MF_PD_PREFERRED_LANGUAGE, L"MF_PD_PREFERRED_LANGUAGE" },
	{ MF_PD_PLAYBACK_BOUNDARY_TIME, L"MF_PD_PLAYBACK_BOUNDARY_TIME" },
	{ MF_PD_AUDIO_ISVARIABLEBITRATE, L"MF_PD_AUDIO_ISVARIABLEBITRATE" },
	{ MF_SD_LANGUAGE, L"MF_SD_LANGUAGE" },
	{ MF_SD_PROTECTED, L"MF_SD_PROTECTED" },
	{ MF_SD_STREAM_NAME, L"MF_SD_STREAM_NAME" },
	{ MF_SD_MUTUALLY_EXCLUSIVE, L"MF_SD_MUTUALLY_EXCLUSIVE" },
	{ MF_TOPONODE_DRAIN, L"MF_TOPONODE_DRAIN" },
	{ MF_TOPONODE_D3DAWARE, L"MF_TOPONODE_D3DAWARE" },
	{ MF_TOPOLOGY_RESOLUTION_STATUS, L"MF_TOPOLOGY_RESOLUTION_STATUS" },
	{ MF_TOPONODE_ERRORCODE, L"MF_TOPONODE_ERRORCODE" },
	{ MF_TOPONODE_CONNECT_METHOD, L"MF_TOPONODE_CONNECT_METHOD" },
	{ MF_TOPONODE_LOCKED, L"MF_TOPONODE_LOCKED" },
	{ MF_TOPONODE_WORKQUEUE_ID, L"MF_TOPONODE_WORKQUEUE_ID" },
	{ MF_TOPONODE_WORKQUEUE_MMCSS_CLASS, L"MF_TOPONODE_WORKQUEUE_MMCSS_CLASS" },
	{ MF_TOPONODE_DECRYPTOR, L"MF_TOPONODE_DECRYPTOR" },
	{ MF_TOPONODE_DISCARDABLE, L"MF_TOPONODE_DISCARDABLE" },
	{ MF_TOPONODE_ERROR_MAJORTYPE, L"MF_TOPONODE_ERROR_MAJORTYPE" },
	{ MF_TOPONODE_ERROR_SUBTYPE, L"MF_TOPONODE_ERROR_SUBTYPE" },
	{ MF_TOPONODE_WORKQUEUE_MMCSS_TASKID, L"MF_TOPONODE_WORKQUEUE_MMCSS_TASKID" },
	{ MF_TOPONODE_WORKQUEUE_MMCSS_PRIORITY, L"MF_TOPONODE_WORKQUEUE_MMCSS_PRIORITY" },
	{ MF_TOPONODE_WORKQUEUE_ITEM_PRIORITY, L"MF_TOPONODE_WORKQUEUE_ITEM_PRIORITY" },
	{ MF_TOPONODE_MARKIN_HERE, L"MF_TOPONODE_MARKIN_HERE" },
	{ MF_TOPONODE_MARKOUT_HERE, L"MF_TOPONODE_MARKOUT_HERE" },
	{ MF_TOPONODE_DECODER, L"MF_TOPONODE_DECODER" },
	{ MF_TOPONODE_MEDIASTART, L"MF_TOPONODE_MEDIASTART" },
	{ MF_TOPONODE_MEDIASTOP, L"MF_TOPONODE_MEDIASTOP" },
	{ MF_TOPONODE_SOURCE, L"MF_TOPONODE_SOURCE" },
	{ MF_TOPONODE_PRESENTATION_DESCRIPTOR, L"MF_TOPONODE_PRESENTATION_DESCRIPTOR" },
	{ MF_TOPONODE_STREAM_DESCRIPTOR, L"MF_TOPONODE_STREAM_DESCRIPTOR" },
	{ MF_TOPONODE_SEQUENCE_ELEMENTID, L"MF_TOPONODE_SEQUENCE_ELEMENTID" },
	{ MF_TOPONODE_TRANSFORM_OBJECTID, L"MF_TOPONODE_TRANSFORM_OBJECTID" },
	{ MF_TOPONODE_STREAMID, L"MF_TOPONODE_STREAMID" },
	{ MF_TOPONODE_NOSHUTDOWN_ON_REMOVE, L"MF_TOPONODE_NOSHUTDOWN_ON_REMOVE" },
	{ MF_TOPONODE_RATELESS, L"MF_TOPONODE_RATELESS" },
	{ MF_TOPONODE_DISABLE_PREROLL, L"MF_TOPONODE_DISABLE_PREROLL" },
	{ MF_TOPONODE_PRIMARYOUTPUT, L"MF_TOPONODE_PRIMARYOUTPUT" },

	//From wmcontainer.h
	{ MF_PD_ASF_FILEPROPERTIES_FILE_ID, L"MF_PD_ASF_FILEPROPERTIES_FILE_ID" },
	{ MF_PD_ASF_FILEPROPERTIES_CREATION_TIME, L"MF_PD_ASF_FILEPROPERTIES_CREATION_TIME" },
	{ MF_PD_ASF_FILEPROPERTIES_PACKETS, L"MF_PD_ASF_FILEPROPERTIES_PACKETS" },
	{ MF_PD_ASF_FILEPROPERTIES_PLAY_DURATION, L"MF_PD_ASF_FILEPROPERTIES_PLAY_DURATION" },
	{ MF_PD_ASF_FILEPROPERTIES_SEND_DURATION, L"MF_PD_ASF_FILEPROPERTIES_SEND_DURATION" },
	{ MF_PD_ASF_FILEPROPERTIES_PREROLL, L"MF_PD_ASF_FILEPROPERTIES_PREROLL" },
	{ MF_PD_ASF_FILEPROPERTIES_FLAGS, L"MF_PD_ASF_FILEPROPERTIES_FLAGS" },
	{ MF_PD_ASF_FILEPROPERTIES_MIN_PACKET_SIZE, L"MF_PD_ASF_FILEPROPERTIES_MIN_PACKET_SIZE" },
	{ MF_PD_ASF_FILEPROPERTIES_MAX_PACKET_SIZE, L"MF_PD_ASF_FILEPROPERTIES_MAX_PACKET_SIZE" },
	{ MF_PD_ASF_FILEPROPERTIES_MAX_BITRATE, L"MF_PD_ASF_FILEPROPERTIES_MAX_BITRATE" },
	{ MF_PD_ASF_CONTENTENCRYPTION_TYPE, L"MF_PD_ASF_CONTENTENCRYPTION_TYPE" },
	{ MF_PD_ASF_CONTENTENCRYPTION_KEYID, L"MF_PD_ASF_CONTENTENCRYPTION_KEYID" },
	{ MF_PD_ASF_CONTENTENCRYPTION_SECRET_DATA, L"MF_PD_ASF_CONTENTENCRYPTION_SECRET_DATA" },
	{ MF_PD_ASF_CONTENTENCRYPTION_LICENSE_URL, L"MF_PD_ASF_CONTENTENCRYPTION_LICENSE_URL" },
	{ MF_PD_ASF_CONTENTENCRYPTIONEX_ENCRYPTION_DATA, L"MF_PD_ASF_CONTENTENCRYPTIONEX_ENCRYPTION_DATA" },
	{ MF_PD_ASF_LANGLIST, L"MF_PD_ASF_LANGLIST" },
	{ MF_PD_ASF_LANGLIST_LEGACYORDER, L"MF_PD_ASF_LANGLIST_LEGACYORDER" },
	{ MF_PD_ASF_MARKER, L"MF_PD_ASF_MARKER" },
	{ MF_PD_ASF_SCRIPT, L"MF_PD_ASF_SCRIPT" },
	{ MF_PD_ASF_CODECLIST, L"MF_PD_ASF_CODECLIST" },
	{ MF_PD_ASF_METADATA_IS_VBR, L"MF_PD_ASF_METADATA_IS_VBR" },
	{ MF_PD_ASF_METADATA_V8_VBRPEAK, L"MF_PD_ASF_METADATA_V8_VBRPEAK" },
	{ MF_PD_ASF_METADATA_V8_BUFFERAVERAGE, L"MF_PD_ASF_METADATA_V8_BUFFERAVERAGE" },
	{ MF_PD_ASF_METADATA_LEAKY_BUCKET_PAIRS, L"MF_PD_ASF_METADATA_LEAKY_BUCKET_PAIRS" },
	{ MF_PD_ASF_DATA_START_OFFSET, L"MF_PD_ASF_DATA_START_OFFSET" },
	{ MF_PD_ASF_DATA_LENGTH, L"MF_PD_ASF_DATA_LENGTH" },
	{ MF_SD_ASF_EXTSTRMPROP_LANGUAGE_ID_INDEX, L"MF_SD_ASF_EXTSTRMPROP_LANGUAGE_ID_INDEX" },
	{ MF_SD_ASF_EXTSTRMPROP_AVG_DATA_BITRATE, L"MF_SD_ASF_EXTSTRMPROP_AVG_DATA_BITRATE" },
	{ MF_SD_ASF_EXTSTRMPROP_AVG_BUFFERSIZE, L"MF_SD_ASF_EXTSTRMPROP_AVG_BUFFERSIZE" },
	{ MF_SD_ASF_EXTSTRMPROP_MAX_DATA_BITRATE, L"MF_SD_ASF_EXTSTRMPROP_MAX_DATA_BITRATE" },
	{ MF_SD_ASF_EXTSTRMPROP_MAX_BUFFERSIZE, L"MF_SD_ASF_EXTSTRMPROP_MAX_BUFFERSIZE" },
	{ MF_SD_ASF_STREAMBITRATES_BITRATE, L"MF_SD_ASF_STREAMBITRATES_BITRATE" },
	{ MF_SD_ASF_METADATA_DEVICE_CONFORMANCE_TEMPLATE, L"MF_SD_ASF_METADATA_DEVICE_CONFORMANCE_TEMPLATE" },
	{ MF_PD_ASF_INFO_HAS_AUDIO, L"MF_PD_ASF_INFO_HAS_AUDIO" },
	{ MF_PD_ASF_INFO_HAS_VIDEO, L"MF_PD_ASF_INFO_HAS_VIDEO" },
	{ MF_PD_ASF_INFO_HAS_NON_AUDIO_VIDEO, L"MF_PD_ASF_INFO_HAS_NON_AUDIO_VIDEO" },
	{ MF_ASFPROFILE_MINPACKETSIZE, L"MF_ASFPROFILE_MINPACKETSIZE" },
	{ MF_ASFPROFILE_MAXPACKETSIZE, L"MF_ASFPROFILE_MAXPACKETSIZE" },
	{ MF_ASFSTREAMCONFIG_LEAKYBUCKET1, L"MF_ASFSTREAMCONFIG_LEAKYBUCKET1" },
	{ MF_ASFSTREAMCONFIG_LEAKYBUCKET2, L"MF_ASFSTREAMCONFIG_LEAKYBUCKET2" },
	{ MFASFSampleExtension_SampleDuration, L"MFASFSampleExtension_SampleDuration" },
	{ MFASFSampleExtension_OutputCleanPoint, L"MFASFSampleExtension_OutputCleanPoint" },
	{ MFASFSampleExtension_SMPTE, L"MFASFSampleExtension_SMPTE" },
	{ MFASFSampleExtension_FileName, L"MFASFSampleExtension_FileName" },
	{ MFASFSampleExtension_ContentType, L"MFASFSampleExtension_ContentType" },
	{ MFASFSampleExtension_PixelAspectRatio, L"MFASFSampleExtension_PixelAspectRatio" },
	{ MFASFSampleExtension_Encryption_SampleID, L"MFASFSampleExtension_Encryption_SampleID" },
	{ MFASFSampleExtension_Encryption_KeyID, L"MFASFSampleExtension_Encryption_KeyID" },
	{ MFASFMutexType_Language, L"MFASFMutexType_Language" },
	{ MFASFMutexType_Bitrate, L"MFASFMutexType_Bitrate" },
	{ MFASFMutexType_Presentation, L"MFASFMutexType_Presentation" },
	{ MFASFMutexType_Unknown, L"MFASFMutexType_Unknown" },

	// From wmsdkidl.h
	{ WMMEDIASUBTYPE_Base, L"WMMEDIASUBTYPE_Base" },
	{ WMMEDIATYPE_Video, L"WMMEDIATYPE_Video" },
	{ WMMEDIASUBTYPE_RGB1, L"WMMEDIASUBTYPE_RGB1" },
	{ WMMEDIASUBTYPE_RGB4, L"WMMEDIASUBTYPE_RGB4" },
	{ WMMEDIASUBTYPE_RGB8, L"WMMEDIASUBTYPE_RGB8" },
	{ WMMEDIASUBTYPE_RGB565, L"WMMEDIASUBTYPE_RGB565" },
	{ WMMEDIASUBTYPE_RGB555, L"WMMEDIASUBTYPE_RGB555" },
	{ WMMEDIASUBTYPE_RGB24, L"WMMEDIASUBTYPE_RGB24" },
	{ WMMEDIASUBTYPE_RGB32, L"WMMEDIASUBTYPE_RGB32" },
	{ WMMEDIASUBTYPE_I420, L"WMMEDIASUBTYPE_I420" },
	{ WMMEDIASUBTYPE_IYUV, L"WMMEDIASUBTYPE_IYUV" },
	{ WMMEDIASUBTYPE_YV12, L"WMMEDIASUBTYPE_YV12" },
	{ WMMEDIASUBTYPE_YUY2, L"WMMEDIASUBTYPE_YUY2" },
	{ WMMEDIASUBTYPE_P422, L"WMMEDIASUBTYPE_P422" },
	{ WMMEDIASUBTYPE_UYVY, L"WMMEDIASUBTYPE_UYVY" },
	{ WMMEDIASUBTYPE_YVYU, L"WMMEDIASUBTYPE_YVYU" },
	{ WMMEDIASUBTYPE_YVU9, L"WMMEDIASUBTYPE_YVU9" },
	{ WMMEDIASUBTYPE_VIDEOIMAGE, L"WMMEDIASUBTYPE_VIDEOIMAGE" },
	{ WMMEDIASUBTYPE_MP43, L"WMMEDIASUBTYPE_MP43" },
	{ WMMEDIASUBTYPE_MP4S, L"WMMEDIASUBTYPE_MP4S" },
	{ WMMEDIASUBTYPE_M4S2, L"WMMEDIASUBTYPE_M4S2" },
	{ WMMEDIASUBTYPE_WMV1, L"WMMEDIASUBTYPE_WMV1" },
	{ WMMEDIASUBTYPE_WMV2, L"WMMEDIASUBTYPE_WMV2" },
	{ WMMEDIASUBTYPE_MSS1, L"WMMEDIASUBTYPE_MSS1" },
	{ WMMEDIASUBTYPE_MPEG2_VIDEO, L"WMMEDIASUBTYPE_MPEG2_VIDEO" },
	{ WMMEDIATYPE_Audio, L"WMMEDIATYPE_Audio" },
	{ WMMEDIASUBTYPE_PCM, L"WMMEDIASUBTYPE_PCM" },
	{ WMMEDIASUBTYPE_DRM, L"WMMEDIASUBTYPE_DRM" },
	{ WMMEDIASUBTYPE_WMAudioV9, L"WMMEDIASUBTYPE_WMAudioV9" },
	{ WMMEDIASUBTYPE_WMAudio_Lossless, L"WMMEDIASUBTYPE_WMAudio_Lossless" },
	{ WMMEDIASUBTYPE_MSS2, L"WMMEDIASUBTYPE_MSS2" },
	{ WMMEDIASUBTYPE_WMSP1, L"WMMEDIASUBTYPE_WMSP1" },
	{ WMMEDIASUBTYPE_WMSP2, L"WMMEDIASUBTYPE_WMSP2" },
	{ WMMEDIASUBTYPE_WMV3, L"WMMEDIASUBTYPE_WMV3" },
	{ WMMEDIASUBTYPE_WMVP, L"WMMEDIASUBTYPE_WMVP" },
	{ WMMEDIASUBTYPE_WVP2, L"WMMEDIASUBTYPE_WVP2" },
	{ WMMEDIASUBTYPE_WMVA, L"WMMEDIASUBTYPE_WMVA" },
	{ WMMEDIASUBTYPE_WVC1, L"WMMEDIASUBTYPE_WVC1" },
	{ WMMEDIASUBTYPE_WMAudioV8, L"WMMEDIASUBTYPE_WMAudioV8" },
	{ WMMEDIASUBTYPE_WMAudioV7, L"WMMEDIASUBTYPE_WMAudioV7" },
	{ WMMEDIASUBTYPE_WMAudioV2, L"WMMEDIASUBTYPE_WMAudioV2" },
	{ WMMEDIASUBTYPE_ACELPnet, L"WMMEDIASUBTYPE_ACELPnet" },
	{ WMMEDIASUBTYPE_MP3, L"WMMEDIASUBTYPE_MP3" },
	{ WMMEDIASUBTYPE_WebStream, L"WMMEDIASUBTYPE_WebStream" },
	{ WMMEDIATYPE_Script, L"WMMEDIATYPE_Script" },
	{ WMMEDIATYPE_Image, L"WMMEDIATYPE_Image" },
	{ WMMEDIATYPE_FileTransfer, L"WMMEDIATYPE_FileTransfer" },
	{ WMMEDIATYPE_Text, L"WMMEDIATYPE_Text" },
	{ WMFORMAT_VideoInfo, L"WMFORMAT_VideoInfo" },
	{ WMFORMAT_MPEG2Video, L"WMFORMAT_MPEG2Video" },
	{ WMFORMAT_WaveFormatEx, L"WMFORMAT_WaveFormatEx" },
	{ WMFORMAT_Script, L"WMFORMAT_Script" },
	{ WMFORMAT_WebStream, L"WMFORMAT_WebStream" },
	{ WMSCRIPTTYPE_TwoStrings, L"WMSCRIPTTYPE_TwoStrings" },
	{ WM_SampleExtensionGUID_OutputCleanPoint, L"WM_SampleExtensionGUID_OutputCleanPoint" },
	{ WM_SampleExtensionGUID_Timecode, L"WM_SampleExtensionGUID_Timecode" },
	{ WM_SampleExtensionGUID_ChromaLocation, L"WM_SampleExtensionGUID_ChromaLocation" },
	{ WM_SampleExtensionGUID_ColorSpaceInfo, L"WM_SampleExtensionGUID_ColorSpaceInfo" },
	{ WM_SampleExtensionGUID_UserDataInfo, L"WM_SampleExtensionGUID_UserDataInfo" },
	{ WM_SampleExtensionGUID_FileName, L"WM_SampleExtensionGUID_FileName" },
	{ WM_SampleExtensionGUID_ContentType, L"WM_SampleExtensionGUID_ContentType" },
	{ WM_SampleExtensionGUID_PixelAspectRatio, L"WM_SampleExtensionGUID_PixelAspectRatio" },
	{ WM_SampleExtensionGUID_SampleDuration, L"WM_SampleExtensionGUID_SampleDuration" },
	{ WM_SampleExtensionGUID_SampleProtectionSalt, L"WM_SampleExtensionGUID_SampleProtectionSalt" },

	// From mfidl.h
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE" },
	{ MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME, L"MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME" },
	{ MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, L"MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID" },
	{ MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID, L"MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID" },
	{ MF_DEVICESTREAM_IMAGE_STREAM, L"MF_DEVICESTREAM_IMAGE_STREAM" },
	{ MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM, L"MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM" },
	{ MF_DEVICESTREAM_STREAM_ID, L"MF_DEVICESTREAM_STREAM_ID" },
	{ MF_DEVICESTREAM_STREAM_CATEGORY, L"MF_DEVICESTREAM_STREAM_CATEGORY" },
	{ MF_DEVICESTREAM_TRANSFORM_STREAM_ID, L"MF_DEVICESTREAM_TRANSFORM_STREAM_ID" },
	{ MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID, L"MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID" },
	{ MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT, L"MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT" },
	{ MF_DEVICESTREAM_TAKEPHOTO_TRIGGER, L"MF_DEVICESTREAM_TAKEPHOTO_TRIGGER" },
	{ MF_DEVICESTREAM_MAX_FRAME_BUFFERS, L"MF_DEVICESTREAM_MAX_FRAME_BUFFERS" },
	{ MFSampleExtension_DeviceTimestamp, L"MFSampleExtension_DeviceTimestamp" },

	// From ks.h
	{ KSPROPTYPESETID_General, L"KSPROPTYPESETID_General" },
	{ KSPROPSETID_General, L"KSPROPSETID_General" },
	{ KSMETHODSETID_StreamIo, L"KSMETHODSETID_StreamIo" },
	{ KSPROPSETID_MediaSeeking, L"KSPROPSETID_MediaSeeking" },
	{ KSPROPSETID_Topology, L"KSPROPSETID_Topology" },
	{ KSCATEGORY_BRIDGE, L"KSCATEGORY_BRIDGE" },
	{ KSCATEGORY_CAPTURE, L"KSCATEGORY_CAPTURE" },
	{ KSCATEGORY_VIDEO_CAMERA, L"KSCATEGORY_VIDEO_CAMERA" },
	{ KSCATEGORY_RENDER, L"KSCATEGORY_RENDER" },
	{ KSCATEGORY_MIXER, L"KSCATEGORY_MIXER" },
	{ KSCATEGORY_SPLITTER, L"KSCATEGORY_SPLITTER" },
	{ KSCATEGORY_DATACOMPRESSOR, L"KSCATEGORY_DATACOMPRESSOR" },
	{ KSCATEGORY_DATADECOMPRESSOR, L"KSCATEGORY_DATADECOMPRESSOR" },
	{ KSCATEGORY_DATATRANSFORM, L"KSCATEGORY_DATATRANSFORM" },
	{ KSMFT_CATEGORY_VIDEO_DECODER, L"KSMFT_CATEGORY_VIDEO_DECODER" },
	{ KSMFT_CATEGORY_VIDEO_ENCODER, L"KSMFT_CATEGORY_VIDEO_ENCODER" },
	{ KSMFT_CATEGORY_VIDEO_EFFECT, L"KSMFT_CATEGORY_VIDEO_EFFECT" },
	{ KSMFT_CATEGORY_MULTIPLEXER, L"KSMFT_CATEGORY_MULTIPLEXER" },
	{ KSMFT_CATEGORY_DEMULTIPLEXER, L"KSMFT_CATEGORY_DEMULTIPLEXER" },
	{ KSMFT_CATEGORY_AUDIO_DECODER, L"KSMFT_CATEGORY_AUDIO_DECODER" },
	{ KSMFT_CATEGORY_AUDIO_ENCODER, L"KSMFT_CATEGORY_AUDIO_ENCODER" },
	{ KSMFT_CATEGORY_AUDIO_EFFECT, L"KSMFT_CATEGORY_AUDIO_EFFECT" },
	{ KSMFT_CATEGORY_VIDEO_PROCESSOR, L"KSMFT_CATEGORY_VIDEO_PROCESSOR" },
	{ KSMFT_CATEGORY_OTHER, L"KSMFT_CATEGORY_OTHER" },
	{ KSCATEGORY_COMMUNICATIONSTRANSFORM, L"KSCATEGORY_COMMUNICATIONSTRANSFORM" },
	{ KSCATEGORY_INTERFACETRANSFORM, L"KSCATEGORY_INTERFACETRANSFORM" },
	{ KSCATEGORY_MEDIUMTRANSFORM, L"KSCATEGORY_MEDIUMTRANSFORM" },
	{ KSCATEGORY_FILESYSTEM, L"KSCATEGORY_FILESYSTEM" },
	{ KSCATEGORY_CLOCK, L"KSCATEGORY_CLOCK" },
	{ KSCATEGORY_PROXY, L"KSCATEGORY_PROXY" },
	{ KSCATEGORY_QUALITY, L"KSCATEGORY_QUALITY" },
	{ KSTIME_FORMAT_FRAME, L"KSTIME_FORMAT_FRAME" },
	{ KSTIME_FORMAT_BYTE, L"KSTIME_FORMAT_BYTE" },
	{ KSTIME_FORMAT_SAMPLE, L"KSTIME_FORMAT_SAMPLE" },
	{ KSTIME_FORMAT_FIELD, L"KSTIME_FORMAT_FIELD" },
	{ KSTIME_FORMAT_MEDIA_TIME, L"KSTIME_FORMAT_MEDIA_TIME" },
	{ KSINTERFACESETID_Standard, L"KSINTERFACESETID_Standard" },
	{ KSINTERFACESETID_FileIo, L"KSINTERFACESETID_FileIo" },
	{ KSMEDIUMSETID_Standard, L"KSMEDIUMSETID_Standard" },
	{ KSPROPSETID_Pin, L"KSPROPSETID_Pin" },
	{ KSEVENTSETID_PinCapsChange, L"KSEVENTSETID_PinCapsChange" },
	{ KSEVENTSETID_VolumeLimit, L"KSEVENTSETID_VolumeLimit" },
	{ KSNAME_Filter, L"KSNAME_Filter" },
	{ KSNAME_Pin, L"KSNAME_Pin" },
	{ KSNAME_Clock, L"KSNAME_Clock" },
	{ KSNAME_Allocator, L"KSNAME_Allocator" },
	{ KSNAME_TopologyNode, L"KSNAME_TopologyNode" },
	{ KSDATAFORMAT_TYPE_STREAM, L"KSDATAFORMAT_TYPE_STREAM" },
	{ KSDATAFORMAT_SUBTYPE_NONE, L"KSDATAFORMAT_SUBTYPE_NONE" },
	{ KSDATAFORMAT_SPECIFIER_FILENAME, L"KSDATAFORMAT_SPECIFIER_FILENAME" },
	{ KSDATAFORMAT_SPECIFIER_FILEHANDLE, L"KSDATAFORMAT_SPECIFIER_FILEHANDLE" },
	{ KSDATAFORMAT_SPECIFIER_NONE, L"KSDATAFORMAT_SPECIFIER_NONE" },
	{ KSPROPSETID_Quality, L"KSPROPSETID_Quality" },
	{ KSPROPSETID_Connection, L"KSPROPSETID_Connection" },
	{ KSPROPSETID_MemoryTransport, L"KSPROPSETID_MemoryTransport" },
	{ KSMEMORY_TYPE_SYSTEM, L"KSMEMORY_TYPE_SYSTEM" },
	{ KSMEMORY_TYPE_USER, L"KSMEMORY_TYPE_USER" },
	{ KSMEMORY_TYPE_KERNEL_PAGED, L"KSMEMORY_TYPE_KERNEL_PAGED" },
	{ KSMEMORY_TYPE_KERNEL_NONPAGED, L"KSMEMORY_TYPE_KERNEL_NONPAGED" },
	{ KSMEMORY_TYPE_DEVICE_UNKNOWN, L"KSMEMORY_TYPE_DEVICE_UNKNOWN" },
	{ KSEVENTSETID_StreamAllocator, L"KSEVENTSETID_StreamAllocator" },
	{ KSMETHODSETID_StreamAllocator, L"KSMETHODSETID_StreamAllocator" },
	{ KSPROPSETID_StreamAllocator, L"KSPROPSETID_StreamAllocator" },
	{ KSPROPSETID_StreamInterface, L"KSPROPSETID_StreamInterface" },
	{ KSPROPSETID_Stream, L"KSPROPSETID_Stream" },
	{ KSPROPSETID_Clock, L"KSPROPSETID_Clock" },
	{ KSEVENTSETID_Clock, L"KSEVENTSETID_Clock" },
	{ KSEVENTSETID_Connection, L"KSEVENTSETID_Connection" },
	{ KSEVENTSETID_Device, L"KSEVENTSETID_Device" },
	{ KSDEGRADESETID_Standard, L"KSDEGRADESETID_Standard" },

	// From encdec.h
	{ SID_DRMSecureServiceChannel, L"SID_DRMSecureServiceChannel" },
	{ CLSID_ETFilterEncProperties, L"CLSID_ETFilterEncProperties" },
	{ CLSID_ETFilterTagProperties, L"CLSID_ETFilterTagProperties" },
	{ CLSID_PTFilter, L"CLSID_PTFilter" },
	{ CLSID_DTFilterEncProperties, L"CLSID_DTFilterEncProperties" },
	{ CLSID_DTFilterTagProperties, L"CLSID_DTFilterTagProperties" },
	{ CLSID_XDSCodecProperties, L"CLSID_XDSCodecProperties" },
	{ CLSID_XDSCodecTagProperties, L"CLSID_XDSCodecTagProperties" },
	{ CLSID_CPCAFiltersCategory, L"CLSID_CPCAFiltersCategory" },
	{ EVENTID_XDSCodecNewXDSRating, L"EVENTID_XDSCodecNewXDSRating" },
	{ EVENTID_XDSCodecDuplicateXDSRating, L"EVENTID_XDSCodecDuplicateXDSRating" },
	{ EVENTID_XDSCodecNewXDSPacket, L"EVENTID_XDSCodecNewXDSPacket" },
	{ EVENTID_DTFilterRatingChange, L"EVENTID_DTFilterRatingChange" },
	{ EVENTID_DTFilterRatingsBlock, L"EVENTID_DTFilterRatingsBlock" },
	{ EVENTID_DTFilterRatingsUnblock, L"EVENTID_DTFilterRatingsUnblock" },
	{ EVENTID_DTFilterXDSPacket, L"EVENTID_DTFilterXDSPacket" },
	{ EVENTID_ETFilterEncryptionOn, L"EVENTID_ETFilterEncryptionOn" },
	{ EVENTID_ETFilterEncryptionOff, L"EVENTID_ETFilterEncryptionOff" },
	{ EVENTID_DTFilterCOPPUnblock, L"EVENTID_DTFilterCOPPUnblock" },
	{ EVENTID_EncDecFilterError, L"EVENTID_EncDecFilterError" },
	{ EVENTID_DTFilterCOPPBlock, L"EVENTID_DTFilterCOPPBlock" },
	{ EVENTID_ETFilterCopyOnce, L"EVENTID_ETFilterCopyOnce" },
	{ EVENTID_ETFilterCopyNever, L"EVENTID_ETFilterCopyNever" },
	{ EVENTID_DTFilterDataFormatOK, L"EVENTID_DTFilterDataFormatOK" },
	{ EVENTID_DTFilterDataFormatFailure, L"EVENTID_DTFilterDataFormatFailure" },
	{ EVENTID_ETDTFilterLicenseOK, L"EVENTID_ETDTFilterLicenseOK" },
	{ EVENTID_ETDTFilterLicenseFailure, L"EVENTID_ETDTFilterLicenseFailure" },
	{ MEDIASUBTYPE_ETDTFilter_Tagged, L"MEDIASUBTYPE_ETDTFilter_Tagged" },
	{ FORMATTYPE_ETDTFilter_Tagged, L"FORMATTYPE_ETDTFilter_Tagged" },
	{ MEDIASUBTYPE_CPFilters_Processed, L"MEDIASUBTYPE_CPFilters_Processed" },
	{ FORMATTYPE_CPFilters_Processed, L"FORMATTYPE_CPFilters_Processed" },
	{ EVENTID_EncDecFilterEvent, L"EVENTID_EncDecFilterEvent" },
	{ EVENTID_FormatNotSupportedEvent, L"EVENTID_FormatNotSupportedEvent" },
	{ EVENTID_DemultiplexerFilterDiscontinuity, L"EVENTID_DemultiplexerFilterDiscontinuity" },
	{ DSATTRIB_WMDRMProtectionInfo, L"DSATTRIB_WMDRMProtectionInfo" },
	{ DSATTRIB_BadSampleInfo, L"DSATTRIB_BadSampleInfo" },

	// From mftransform.h
	{ MF_TRANSFORM_ASYNC, L"MF_TRANSFORM_ASYNC" },
	{ MF_TRANSFORM_ASYNC_UNLOCK, L"MF_TRANSFORM_ASYNC_UNLOCK" },
	{ MF_TRANSFORM_FLAGS_Attribute, L"MF_TRANSFORM_FLAGS_Attribute" },
	{ MF_TRANSFORM_CATEGORY_Attribute, L"MF_TRANSFORM_CATEGORY_Attribute" },
	{ MFT_TRANSFORM_CLSID_Attribute, L"MFT_TRANSFORM_CLSID_Attribute" },
	{ MFT_INPUT_TYPES_Attributes, L"MFT_INPUT_TYPES_Attributes" },
	{ MFT_OUTPUT_TYPES_Attributes, L"MFT_OUTPUT_TYPES_Attributes" },
	{ MFT_ENUM_HARDWARE_URL_Attribute, L"MFT_ENUM_HARDWARE_URL_Attribute" },
	{ MFT_FRIENDLY_NAME_Attribute, L"MFT_FRIENDLY_NAME_Attribute" },
	{ MFT_CONNECTED_STREAM_ATTRIBUTE, L"MFT_CONNECTED_STREAM_ATTRIBUTE" },
	{ MFT_CONNECTED_TO_HW_STREAM, L"MFT_CONNECTED_TO_HW_STREAM" },
	{ MFT_PREFERRED_OUTPUTTYPE_Attribute, L"MFT_PREFERRED_OUTPUTTYPE_Attribute" },
	{ MFT_PROCESS_LOCAL_Attribute, L"MFT_PROCESS_LOCAL_Attribute" },
	{ MFT_PREFERRED_ENCODER_PROFILE, L"MFT_PREFERRED_ENCODER_PROFILE" },
	{ MFT_HW_TIMESTAMP_WITH_QPC_Attribute, L"MFT_HW_TIMESTAMP_WITH_QPC_Attribute" },
	{ MFT_FIELDOFUSE_UNLOCK_Attribute, L"MFT_FIELDOFUSE_UNLOCK_Attribute" },
	{ MFT_CODEC_MERIT_Attribute, L"MFT_CODEC_MERIT_Attribute" },
	{ MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE, L"MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE" },
	{ MF_ENABLE_3DVIDEO_OUTPUT, L"MF_ENABLE_3DVIDEO_OUTPUT" },
	{ MF_SA_D3D11_BINDFLAGS, L"MF_SA_D3D11_BINDFLAGS" },
	{ MF_SA_D3D11_USAGE, L"MF_SA_D3D11_USAGE" },
	{ MF_SA_D3D11_AWARE, L"MF_SA_D3D11_AWARE" },
	{ MF_SA_D3D11_SHARED, L"MF_SA_D3D11_SHARED" },
	{ MF_SA_D3D11_SHARED_WITHOUT_MUTEX, L"MF_SA_D3D11_SHARED_WITHOUT_MUTEX" },
	{ MF_SA_BUFFERS_PER_SAMPLE, L"MF_SA_BUFFERS_PER_SAMPLE" },
	{ MFT_DECODER_EXPOSE_OUTPUT_TYPES_IN_NATIVE_ORDER, L"MFT_DECODER_EXPOSE_OUTPUT_TYPES_IN_NATIVE_ORDER" },
	{ MFT_REMUX_MARK_I_PICTURE_AS_CLEAN_POINT, L"MFT_REMUX_MARK_I_PICTURE_AS_CLEAN_POINT" },
	{ MFT_DECODER_FINAL_VIDEO_RESOLUTION_HINT, L"MFT_DECODER_FINAL_VIDEO_RESOLUTION_HINT" },
	{ MFT_ENCODER_SUPPORTS_CONFIG_EVENT, L"MFT_ENCODER_SUPPORTS_CONFIG_EVENT" },
	{ MFT_ENUM_HARDWARE_VENDOR_ID_Attribute, L"MFT_ENUM_HARDWARE_VENDOR_ID_Attribute" }
};

const std::wstring MFAttrToStrHelper::GUIDToAttrName(const GUID guid)
{
	std::map<const GUID, const std::wstring>::const_iterator itr = GUID_TO_NAME.find(guid);
	if (itr != GUID_TO_NAME.end())
	{
		return GUID_TO_NAME.at(guid);
	}
	OLECHAR* name;
	HRESULT hr = StringFromCLSID(guid, &name);
	if (SUCCEEDED(hr))
	{
		std::wstring retval = name;
		::CoTaskMemFree(name);
		return retval;
	}
	return L"WTF!";
}

std::wstring MFAttrToStrHelper::PropToVarType(PROPVARIANT value)
{
	std::wstring  retVal = L"WTF!!";
	switch (value.vt)
	{
	case VT_EMPTY:
		retVal = L"type(VT_EMPTY(0))(nothing)";
		break;
	case VT_NULL:
		retVal = L"type(VT_NULL(1))(SQL style Null)";
		break;
	case VT_I2:
		retVal = L"type(VT_I2(2))(2 byte signed int)";
		break;
	case VT_I4:
		retVal = L"type(VT_I4(3))(4 byte signed int)";
		break;
	case VT_R4:
		retVal = L"type(VT_R4(4))(4 byte real)";
		break;
	case VT_R8:
		retVal = L"type(VT_R8(5))(8 byte real)";
		break;
	case VT_CY:
		retVal = L"type(VT_CY(6))(currency)";
		break;
	case VT_DATE:
		retVal = L"type(VT_DATE(7))(date)";
		break;
	case VT_BSTR:
		retVal = L"type(VT_BSTR(8))(OLE Automation string)";
		break;
	case VT_DISPATCH:
		retVal = L"type(VT_DISPATCH(9))(IDispatch *)";
		break;
	case VT_ERROR:
		retVal = L"type(VT_ERROR(10))(SCODE)";
		break;
	case VT_BOOL:
		retVal = L"type(VT_BOOL(11))(True = -1, False = 0)";
		break;
	case VT_VARIANT:
		retVal = L"type(VT_VARIANT(12))(VARIANT *)";
		break;
	case VT_UNKNOWN:
		retVal = L"type(VT_UNKNOWN(13))(IUnknown *)";
		break;
	case VT_DECIMAL:
		retVal = L"type(VT_DECIMAL(14))(16 byte fixed point)";
		break;
	case VT_RECORD:
		retVal = L"type(VT_RECORD(36))(user defined type)";
		break;
	case VT_I1:
		retVal = L"type(VT_I1(16))(nothing)";
		break;
	case VT_UI1:
		retVal = L"type(VT_UI1(17))(signed char)";
		break;
	case VT_UI2:
		retVal = L"type(VT_UI2(18))(unsigned short)";
		break;
	case VT_UI4:
		retVal = L"type(VT_UI4(19))(ULONG)";
		break;
	case VT_I8:
		retVal = L"type(VT_I8(20))(signed 64 - bit int)";
		break;
	case VT_UI8:
		retVal = L"type(VT_UI8(21))(unsigned 64 - bit int)";
		break;
	case VT_INT:
		retVal = L"type(VT_INT(22))(signed machine int)";
		break;
	case VT_UINT:
		retVal = L"type(VT_UINT(23))(unsigned machine int)";
		break;
	case VT_INT_PTR:
		retVal = L"type(VT_INT_PTR(37))(signed machine register size width)";
		break;
	case VT_UINT_PTR:
		retVal = L"type(VT_UINT_PTR(38))(unsigned machine register size width)";
		break;
	case VT_VOID:
		retVal = L"type(VT_VOID(24))(C style void)";
		break;
	case VT_HRESULT:
		retVal = L"type(VT_HRESULT(25))(Standard return type)";
		break;
	case VT_PTR:
		retVal = L"type(VT_PTR(26))(pointer type)";
		break;
	case VT_SAFEARRAY:
		retVal = L"type(VT_EMPTY(27))(use VT_ARRAY in VARIANT)";
		break;
	case VT_CARRAY:
		retVal = L"type(VT_CARRAY(28))(C style array)";
		break;
	case VT_USERDEFINED:
		retVal = L"type(VT_USERDEFINED(29))(user defined type)";
		break;
	case VT_LPSTR:
		retVal = L"type(VT_LPSTR(30))(null terminated string)";
		break;
	case VT_LPWSTR:
		retVal = L"type(VT_LPWSTR(31))(wide null terminated string)";
		break;
	case VT_FILETIME:
		retVal = L"type(VT_FILETIME(64))(FILETIME)";
		break;
	case VT_BLOB:
		retVal = L"type(VT_BLOB(65))(Length prefixed bytes)";
		break;
	case VT_STREAM:
		retVal = L"type(VT_STREAM(66))(Name of the stream follows)";
		break;
	case VT_STORAGE:
		retVal = L"type(VT_STORAGE(67))(Name of the storage follows)";
		break;
	case VT_STREAMED_OBJECT:
		retVal = L"type(VT_STREAMED_OBJECT(68))(Stream contains an object)";
		break;
	case VT_STORED_OBJECT:
		retVal = L"type(VT_STORED_OBJECT(69))(Storage contains an object)";
		break;
	case VT_VERSIONED_STREAM:
		retVal = L"type(VT_VERSIONED_STREAM(73))(Stream with a GUID version)";
		break;
	case VT_BLOB_OBJECT:
		retVal = L"type(VT_BLOB_OBJECT(70))(Blob contains an object)";
		break;
	case VT_CF:
		retVal = L"type(VT_CF(71))(Clipboard format)";
		break;
	case VT_CLSID:
		retVal = L"type(VT_CLSID(72))(A Class ID)";
		break;
	case VT_VECTOR:
		retVal = L"type(VT_VECTOR(4096))(simple counted array)";
		break;
	case VT_ARRAY:
		retVal = L"type(VT_ARRAY(8192))(SAFEARRAY *)";
		break;
	case VT_BYREF:
		retVal = L"type(VT_BYREF(16384))(void* for local use)";
		break;
	case VT_BSTR_BLOB:
		retVal = L"type(VT_BSTR_BLOB(4095))(Reserved for system use)";
		break;
	case 4113:
		retVal = L"type(UNKNOWN(4113))(BYTE[])";
		break;
	default:
		retVal = L"type(UNKNOWN(" + std::to_wstring(value.vt) + L"))";
		break;
	}
	return retVal;
}

std::wstring MFAttrToStrHelper::PropToValueImp(CComPtr<IMFAttributes> attributes, GUID guid, PROPVARIANT value)
{
	std::wstring  retVal = L"WTF!!";
	switch (value.vt)
	{
	case VT_EMPTY:
		retVal = L"empty";
		break;
	case VT_NULL:
		retVal = L"not implemented";
		break;
	case VT_I2:
		retVal = std::to_wstring(value.iVal);
		break;
	case VT_I4:
		retVal = std::to_wstring(value.lVal);
		break;
	case VT_R4:
		retVal = std::to_wstring(value.fltVal);
		break;
	case VT_R8:
		retVal = std::to_wstring(value.dblVal);
	case VT_CY:
		retVal = L"not implemented";
	case VT_DATE:
		retVal = std::to_wstring(value.date);
		break;
	case VT_BSTR:
		retVal = L"not implemented";
		break;
	case VT_DISPATCH:
		retVal = L"not implemented";
		break;
	case VT_ERROR:
		retVal = L"not implemented";
		break;
	case VT_BOOL:
		if (value.boolVal)
		{
			retVal = L"true";
		}
		else
		{
			retVal = L"false";
		}
		break;
	case VT_VARIANT:
		retVal = L"not implemented";
		break;
	case VT_UNKNOWN:
		if (guid == MFSampleExtension_Token)
		{ // this is a Sample
			retVal = L"Token";
		}
		else
		{
			retVal = L"IUNKNOWN";
		}
		break;
	case VT_DECIMAL:
		retVal = L"not implemented";
		break;
	case VT_RECORD:
		retVal = L"not implemented";
		break;
	case VT_I1:
		retVal = std::to_wstring(value.cVal);
		break;
	case VT_UI1:
		retVal = std::to_wstring(value.bVal);
		break;
	case VT_UI2:
		retVal = std::to_wstring(value.iVal);
		break;
	case VT_UI4:
		if (guid == MFSampleExtension_Discontinuity)
		{ // this is a bool value
			if (value.ulVal)
			{
				retVal = L"true";
			}
			else
			{
				retVal = L"false";
			}
		}
		else
		{
			retVal = std::to_wstring(value.ulVal);
		}
		break;
	case VT_I8:
		retVal = std::to_wstring(value.iVal);
		break;
	case VT_UI8:
	{
		if (guid == MFSampleExtension_DeviceTimestamp)
		{
			retVal = std::to_wstring(value.hVal.QuadPart);
		}
		else
		{
			// assume this is a ratio
			UINT32 numerator = 0;
			UINT32 denominator = 0;
			HRESULT hr = MFGetAttributeRatio(attributes, guid, &numerator, &denominator);
			if (SUCCEEDED(hr))
			{
				retVal = std::to_wstring(numerator) + L"/" + std::to_wstring(denominator);
			}
		}

		break;
	}
	case VT_INT:
		retVal = std::to_wstring(value.intVal);
		break;
	case VT_UINT:
		retVal = std::to_wstring(value.uintVal);
		break;
	case VT_INT_PTR:
		retVal = L"not implemented";
		break;
	case VT_UINT_PTR:
		retVal = L"not implemented";
		break;
	case VT_VOID:
		retVal = L"not implemented";
		break;
	case VT_HRESULT:
		retVal = L"not implemented";
		break;
	case VT_PTR:
		retVal = L"not implemented";
		break;
	case VT_SAFEARRAY:
		retVal = L"not implemented";
		break;
	case VT_CARRAY:
		retVal = L"not implemented";
		break;
	case VT_USERDEFINED:
		retVal = L"not implemented";
		break;
	case VT_LPSTR:
	{
		std::string ss = value.pszVal;
		std::wstring sws(ss.begin(), ss.end());
		retVal = sws;
		break;
	}
	case VT_LPWSTR:
	{
		std::wstring sws = value.pwszVal;
		retVal = sws;
		break;
	}
	case VT_FILETIME:
		retVal = L"not implemented";
		break;
	case VT_BLOB:
		retVal = L"not implemented";
		break;
	case VT_STREAM:
		retVal = L"not implemented";
		break;
	case VT_STORAGE:
		retVal = L"not implemented";
		break;
	case VT_STREAMED_OBJECT:
		retVal = L"not implemented";
		break;
	case VT_STORED_OBJECT:
		retVal = L"not implemented";
		break;
	case VT_VERSIONED_STREAM:
		retVal = L"not implemented";
		break;
	case VT_BLOB_OBJECT:
		retVal = L"not implemented";
		break;
	case VT_CF:
		retVal = L"not implemented";
		break;
	case VT_CLSID:
	{
		retVal = GUIDToAttrName(*(value.puuid));
		break;
	}
	case VT_VECTOR:
		retVal = L"not implemented";
		break;
	case VT_ARRAY:
		retVal = L"not implemented";
		break;
	case VT_BYREF:
		retVal = L"not implemented";
		break;
	case VT_BSTR_BLOB:
		retVal = L"not implemented";
		break;
	case 4113:
	{
		// assume MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE
		UINT8* buffer = NULL;
		UINT32 bufferSize = 0;
		HRESULT hr = attributes->GetAllocatedBlob(MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, &buffer, &bufferSize);
		if (SUCCEEDED(hr))
		{
			if (bufferSize == 32)
			{
				char* charMAJOR = ((char*)(buffer));
				char* charMINOR = ((char*)(buffer + 16));
				std::string sMAJOR = charMAJOR;
				std::string sMINOR = charMINOR;
				std::wstring wsMAJOR;
				std::wstring wsMINOR;
				wsMAJOR.assign(sMAJOR.begin(), sMAJOR.end());
				wsMINOR.assign(sMINOR.begin(), sMINOR.end());
				retVal = L"MAJOR-" + wsMAJOR + L" MINOR-" + wsMINOR;
			}
		}
		else
		{
			retVal = L"BLOB";
		}
		break;
	}
	default:
		retVal = std::to_wstring(value.vt) + L" unknown";
		break;
	}
	return retVal;
}

std::wstring MFAttrToStrHelper::MediaTypeToValue(CComPtr<IMFActivate> device)
{
	UINT32 blobSize = 0;
	HRESULT hr = device->GetBlobSize(MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, &blobSize);
	BYTE *blob = NULL;
	if (SUCCEEDED(hr))
	{
		blob = new BYTE[blobSize];
		if (blob == NULL)
		{
			return L"ERROR Out of Memory!";
		}
	}
	else
	{
		return L"ERROR!";
	}
	hr = device->GetBlob(MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, blob, blobSize, &blobSize);
	if (blob)
	{
		delete[] blob;
	}
	return L"OK";
}
